<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Welcome to My World</title>
  
  <subtitle>BETTER</subtitle>
  <link href="http://example.com/atom.xml" rel="self"/>
  
  <link href="http://example.com/"/>
  <updated>2020-10-09T13:23:57.294Z</updated>
  <id>http://example.com/</id>
  
  <author>
    <name>LXL</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>PHP语法学习1</title>
    <link href="http://example.com/2020/10/10/PHP%E8%AF%AD%E6%B3%95%E5%AD%A6%E4%B9%A0/"/>
    <id>http://example.com/2020/10/10/PHP%E8%AF%AD%E6%B3%95%E5%AD%A6%E4%B9%A0/</id>
    <published>2020-10-09T19:44:54.000Z</published>
    <updated>2020-10-09T13:23:57.294Z</updated>
    
    <content type="html"><![CDATA[<p>[^]: </p><p>该文为对所收集的资料的一些归纳总结，文末处将放出引用文章链接。</p><h2 id="基本的-PHP-语法"><a href="#基本的-PHP-语法" class="headerlink" title="基本的 PHP 语法"></a>基本的 PHP 语法</h2><p>[^放在代码最前面和最后面]: </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">&#x2F;&#x2F; PHP 代码</span><br><span class="line">?&gt; </span><br></pre></td></tr></table></figure><h4 id="变量"><a href="#变量" class="headerlink" title="变量"></a>变量</h4><p>变量设置的字母前面都要加“$”号</p><p>eg：$x=8</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">function myTest()</span><br><span class="line">&#123;</span><br><span class="line">    global $&#x2F;&#x2F;设置的变量</span><br><span class="line">    &#x2F;&#x2F;运算内容</span><br><span class="line">&#125; </span><br><span class="line"></span><br><span class="line">myTest(); </span><br></pre></td></tr></table></figure><p>还有一种比较复杂的，但似乎效果没多大区别、</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">function myTest()</span><br><span class="line">&#123;</span><br><span class="line">    $GLOBALS[&#39;y&#39;]&#x3D;$GLOBALS[&#39;x&#39;]+$GLOBALS[&#39;y&#39;];</span><br><span class="line">&#125; </span><br><span class="line"> </span><br><span class="line">myTest();</span><br><span class="line">echo $y;</span><br><span class="line">?&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure><table><thead><tr><th>序号</th><th>作用域</th><th>描述</th></tr></thead><tbody><tr><td>1</td><td>global</td><td>全局作用域</td></tr><tr><td>2</td><td>local</td><td>局部作用域</td></tr><tr><td>3</td><td>static</td><td>静态作用域</td></tr><tr><td>4</td><td>parameter</td><td>函数参数作用域</td></tr></tbody></table><p>[^其实还不是很搞清楚这四个的区别，但感觉还是global更广]: </p><h4 id="输出语句"><a href="#输出语句" class="headerlink" title="输出语句"></a>输出语句</h4><p>[^主要是echo与print]: </p><p>​    echo - 可以输出一个或多个字符串</p><p>​    print - 只允许输出一个字符串，返回值总为 1</p><table><thead><tr><th>序号</th><th>种类</th><th>用途</th></tr></thead><tbody><tr><td>1</td><td>echo</td><td>输出一个或者多个字符串。</td></tr><tr><td>2</td><td>print</td><td>和 echo 最主要的区别： print 仅支持一个参数，并总是返回 1。</td></tr><tr><td>3</td><td>print-r</td><td>打印关于变量的易于理解的信息,如果给出的是 string、integer 或 float，将打印变量值本身。如果给出的是  array，将会按照一定格式显示键和元素。object 与数组类似。 记住，print_r() 将把数组的指针移到最后边。使用 reset()  可让指针回到开始处。</td></tr><tr><td>4</td><td>var-dump</td><td>此函数显示关于一个或多个表达式的结构信息，包括表达式的类型与值。数组将递归展开值，通过缩进显示其结构。</td></tr><tr><td></td><td></td><td></td></tr></tbody></table><p>顺便发现了‘br’和‘\n’的区别</p><table><thead><tr><th>代码</th><th>用途</th><th>区别</th></tr></thead><tbody><tr><td>br</td><td>换行</td><td>需打出<br>才可换行，否则无效。</td></tr><tr><td>\n</td><td>换行</td><td>打出”\n“即可换行</td></tr></tbody></table><h4 id="数据类型"><a href="#数据类型" class="headerlink" title="数据类型"></a>数据类型</h4><table><thead><tr><th>序号</th><th>名称</th><th>描述</th></tr></thead><tbody><tr><td>1</td><td>整型</td><td>整数</td></tr><tr><td>2</td><td>浮点型</td><td>小数或指数形式</td></tr><tr><td>3</td><td>数组</td><td>一种把values映射到keys的有序图</td></tr><tr><td>4</td><td>布尔型</td><td>用于条件判断</td></tr><tr><td>5</td><td>对象</td><td></td></tr><tr><td>6</td><td>字符串</td><td>一串字符的序列</td></tr><tr><td>7</td><td>NULL值</td><td>表示变量没有值</td></tr></tbody></table>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;[^]: &lt;/p&gt;
&lt;p&gt;该文为对所收集的资料的一些归纳总结，文末处将放出引用文章链接。&lt;/p&gt;
&lt;h2 id=&quot;基本的-PHP-语法&quot;&gt;&lt;a href=&quot;#基本的-PHP-语法&quot; class=&quot;headerlink&quot; title=&quot;基本的 PHP 语法&quot;&gt;&lt;/a&gt;基本的 </summary>
      
    
    
    
    
    <category term="php 学习笔记​" scheme="http://example.com/tags/php-%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E2%80%8B/"/>
    
  </entry>
  
  <entry>
    <title>A Specil Article</title>
    <link href="http://example.com/2020/10/07/A-Specil-Article/"/>
    <id>http://example.com/2020/10/07/A-Specil-Article/</id>
    <published>2020-10-06T19:42:33.000Z</published>
    <updated>2020-10-06T12:11:50.837Z</updated>
    
    <content type="html"><![CDATA[<p>虽然说很多人已经在中学学习过了，但由于时间间隔太长，已经遗忘了大部分，就做一次归纳总结吧</p><h1 id="二进制"><a href="#二进制" class="headerlink" title="二进制"></a>二进制</h1><p>[二进制_百度百科]: </p><p>二进制（binary）在<a href="https://baike.baidu.com/item/%E6%95%B0%E5%AD%A6/107037">数学</a>和<a href="https://baike.baidu.com/item/%E6%95%B0%E5%AD%97%E7%94%B5%E8%B7%AF/1705">数字电路</a>中指以2为基数的记数系统，以2为基数代表系统是二进位制的。这一系统中，通常用两个不同的符号0（代表零）和1（代表一）来表示。</p><h4 id="算法"><a href="#算法" class="headerlink" title="算法"></a>算法</h4><ol><li><p>将值除以2，记下余数。</p></li><li><p>只要所得的商不为0，继续将最新的商除以2，并记下余数。</p></li><li><p>商为0时，将余数按照记录的顺序从下往上依次排列，即可得到该数的二进制。</p><h6 id="举个栗子"><a href="#举个栗子" class="headerlink" title="举个栗子"></a>举个栗子</h6></li></ol><p><img src="C:\Users\Administrator\Pictures\d01373f082025aaf317d0612f5edab64024f1a9f.png" alt="d01373f082025aaf317d0612f5edab64024f1a9f" loading="lazy"></p><h1 id="八进制"><a href="#八进制" class="headerlink" title="八进制"></a>八进制</h1><p>[八进制_百度百科]: </p><p>八进制，Octal，缩写OCT或O，一种以8为基数的<a href="https://baike.baidu.com/item/%E8%AE%A1%E6%95%B0%E6%B3%95/1591430">计数法</a>，采用0，1，2，3，4，5，6，7八个数字，逢八进1。一些编程语言中常常以数字0开始表明该数字是八进制。八进制的数和二进制数可以按位对应（八进制一位对应二进制三位），因此常应用在<a href="https://baike.baidu.com/item/%E8%AE%A1%E7%AE%97%E6%9C%BA">计算机</a>语言中。</p><h4 id="算法-1"><a href="#算法-1" class="headerlink" title="算法"></a>算法</h4><p>与二进制相似</p><p>十进制化八进制：采用除8取余法。</p><ol><li><p>将值除以8，记下余数。</p></li><li><p>只要所得的商不为0，继续将最新的商除以8，并记下余数。</p></li><li><p>商为0时，将余数按照记录的顺序从下往上依次排列，即可得到该数的二进制。</p><h6 id="举个栗子-1"><a href="#举个栗子-1" class="headerlink" title="举个栗子"></a>举个栗子</h6><p><img src="C:\Users\Administrator\Pictures\2345截图20201006200948.png" alt="2345截图20201006200948" loading="lazy"></p><h2 id="常用转换表"><a href="#常用转换表" class="headerlink" title="常用转换表"></a>常用转换表</h2><p><img src="C:\Users\Administrator\Pictures\u=2342573782,1111918725&fm=26&gp=0.jpg" alt="u=2342573782,1111918725&amp;fm=26&amp;gp=0" loading="lazy"></p></li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;虽然说很多人已经在中学学习过了，但由于时间间隔太长，已经遗忘了大部分，就做一次归纳总结吧&lt;/p&gt;
&lt;h1 id=&quot;二进制&quot;&gt;&lt;a href=&quot;#二进制&quot; class=&quot;headerlink&quot; title=&quot;二进制&quot;&gt;&lt;/a&gt;二进制&lt;/h1&gt;&lt;p&gt;[二进制_百度百科]: &lt;/</summary>
      
    
    
    
    
    <category term="h-p-b-d a-gift 二进制/十进制/八进制" scheme="http://example.com/tags/h-p-b-d-a-gift-%E4%BA%8C%E8%BF%9B%E5%88%B6-%E5%8D%81%E8%BF%9B%E5%88%B6-%E5%85%AB%E8%BF%9B%E5%88%B6/"/>
    
  </entry>
  
  <entry>
    <title>MyFirstArticle</title>
    <link href="http://example.com/2020/10/06/MyFirstArticle/"/>
    <id>http://example.com/2020/10/06/MyFirstArticle/</id>
    <published>2020-10-05T20:50:02.000Z</published>
    <updated>2020-10-05T14:03:21.822Z</updated>
    
    <content type="html"><![CDATA[<p>这几天花了好长(?)时间用hexo搭了一篇博客。。。<br>以下总结为几点：<br>首先，是<strong>hexo的基本命令</strong>：<br>1  <strong>hexo clean</strong>  （个人理解为清除缓存功能）<br>2  <strong>hexo g</strong>       (emmmmmm，应该是用于运行自己写下命令吧)<br>3  <strong>hexo s</strong>       （一般用于hexo g后面，大概是浏览效果吧）<br>4  <strong>hexo d</strong>       (将设计好的本地页面部署到Git上)</p><p>然后，最近发现了一些组合命令</p><p><strong>hexo g -d</strong></p><p>优点：比较快速，不用等待运行时间，一步到位，方便简洁</p><p>缺点：无法浏览，要是命令出现bug（尤其是搭建主题时），整个博客会直接崩掉。。。</p><p>​           然后事情就麻烦了</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;这几天花了好长(?)时间用hexo搭了一篇博客。。。&lt;br&gt;以下总结为几点：&lt;br&gt;首先，是&lt;strong&gt;hexo的基本命令&lt;/strong&gt;：&lt;br&gt;1  &lt;strong&gt;hexo clean&lt;/strong&gt;  （个人理解为清除缓存功能）&lt;br&gt;2  &lt;strong&gt;</summary>
      
    
    
    
    
    <category term="hexo blog" scheme="http://example.com/tags/hexo-blog/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://example.com/2020/10/02/hello-world/"/>
    <id>http://example.com/2020/10/02/hello-world/</id>
    <published>2020-10-02T09:32:57.775Z</published>
    <updated>2020-10-02T09:32:57.775Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot;&gt;documentation&lt;/a&gt; for</summary>
      
    
    
    
    
  </entry>
  
</feed>
