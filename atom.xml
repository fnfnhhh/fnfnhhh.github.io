<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Welcome to My World</title>
  
  <subtitle>BETTER</subtitle>
  <link href="http://example.com/atom.xml" rel="self"/>
  
  <link href="http://example.com/"/>
  <updated>2020-10-11T13:49:37.345Z</updated>
  <id>http://example.com/</id>
  
  <author>
    <name>LXL</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Python学习1</title>
    <link href="http://example.com/2020/10/12/Python%E5%AD%A6%E4%B9%A01/"/>
    <id>http://example.com/2020/10/12/Python%E5%AD%A6%E4%B9%A01/</id>
    <published>2020-10-11T21:02:05.000Z</published>
    <updated>2020-10-11T13:49:37.345Z</updated>
    
    <content type="html"><![CDATA[<h6 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h6><p>最近除了学习PHP语法外，还接触了部分Python。</p><p>个人觉得比起C语言和PHP，Python更加简洁，也更容易入手，非常适合新手。</p><h4 id="基本语法"><a href="#基本语法" class="headerlink" title="基本语法"></a>基本语法</h4><h5 id="输出语句"><a href="#输出语句" class="headerlink" title="输出语句"></a>输出语句</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">print（   ）</span><br></pre></td></tr></table></figure><h5 id="转换数据类型语句"><a href="#转换数据类型语句" class="headerlink" title="转换数据类型语句"></a>转换数据类型语句</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">float（   ）&#x2F;&#x2F;将括号内的内容转换为浮点型。</span><br><span class="line">str(    )&#x2F;&#x2F;将括号内的内容转换为字符串。</span><br><span class="line">int（   ）&#x2F;&#x2F;将括号内的内容转换为整数。</span><br></pre></td></tr></table></figure><p>数据之间用+连接，只有相同类型的数据之间才可以连接。</p><p>for example：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">print（1+1）&#x2F;&#x2F;将输出2</span><br><span class="line">print(1+&quot;1&quot;)&#x2F;&#x2F;失败</span><br><span class="line">print（&quot;1&quot;+&quot;1&quot;)&#x2F;&#x2F;将输出11</span><br><span class="line"></span><br></pre></td></tr></table></figure><h5 id="条件判断语句"><a href="#条件判断语句" class="headerlink" title="条件判断语句"></a>条件判断语句</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">if      else&#x2F;&#x2F;用于两个判断</span><br><span class="line">if    elif   else&#x2F;&#x2F;在两个判断的基础上新增一个判断</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>举个例子</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">a&#x3D;3</span><br><span class="line">if a&gt;&#x3D;2:</span><br><span class="line">  print(a)</span><br><span class="line">else:</span><br><span class="line">  print(a+1)</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>注意！！！！</p><p>这里的if与else首字母需对齐，print与print首字母也需对齐。</p><p>同样的</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">a&#x3D;3</span><br><span class="line">if a&gt;&#x3D;2:</span><br><span class="line">  print(a)</span><br><span class="line">elif a&gt;&#x3D;10</span><br><span class="line">  print(a+7)</span><br><span class="line">else:</span><br><span class="line">  print(a+1)</span><br><span class="line"></span><br></pre></td></tr></table></figure><h6 id="还有if嵌套"><a href="#还有if嵌套" class="headerlink" title="还有if嵌套"></a>还有if嵌套</h6><p>举个例子、、</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">a &#x3D;26</span><br><span class="line">if a&gt;&#x3D;60:</span><br><span class="line">    print(&quot;你已经及格&quot;)</span><br><span class="line">    if a&gt;&#x3D;80:</span><br><span class="line">        print(&quot;你很优秀&quot;)</span><br><span class="line">    else:</span><br><span class="line">        print(&quot;你只是一般&quot;)</span><br><span class="line">else:</span><br><span class="line">    print(&quot;不及格&quot;)</span><br><span class="line">    if 30&lt;&#x3D;a&lt;&#x3D;60:</span><br><span class="line">        print(&quot;你还可以再抢救一下&quot;)</span><br><span class="line">    else:</span><br><span class="line">        print(&quot;学渣&quot;)</span><br><span class="line"> </span><br><span class="line">print(&quot;程序结束&quot;)</span><br></pre></td></tr></table></figure><p>同样的</p><p>同级的if与else对齐，执行命令的语句对齐。</p><h5 id="input（）语句"><a href="#input（）语句" class="headerlink" title="input（）语句"></a>input（）语句</h5><p>input()函数是输入函数，当你在函数的括号内写出问题时，input()函数会将此问题原样显示在屏幕上，并在终端区域等待你针对此问题的回答。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">input（&quot;请选择A,B,C,D&quot;)&#x2F;&#x2F;屏幕上会出现  请选择A,B,C,D  的语句。</span><br></pre></td></tr></table></figure><p>input会对输入的答案进行储存，如果需要把答案提取出来，需将input（）赋值给一个变量，并将变量输出。</p><p>例如</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">input(&quot;请在以下四个选项【A,B,C,D】中，输入你的答案:&quot;)</span><br><span class="line">name &#x3D; input(&quot;请输入你的答案：&quot;)</span><br><span class="line"></span><br><span class="line">print (name)</span><br></pre></td></tr></table></figure><h5 id="练习："><a href="#练习：" class="headerlink" title="练习："></a>练习：</h5><p>分享一下自己做的一个综合性练习</p><table><thead><tr><th>题目要求</th><th>提示</th></tr></thead><tbody><tr><td><strong>注意：以下背景与题目要求相关</strong> 小精灵：您好，欢迎来到古灵阁，请问您需要帮助吗？需要or不需要？ 你：需要 小精灵：请问您需要什么帮助呢？1 存取款；2 货币兑换；3 咨询 你：2 小精灵：金加隆和人民币的兑换率为1:51.3，即一金加隆=51.3人民币 小精灵：请问您需要兑换多少金加隆呢？ （你说了一个数字N） 小精灵：好的，我知道了，您需要兑换（你说的数字N）金加隆。 小精灵：那么，您需要付给我（你说的数字N*51.3）人民币。</td><td>和小精灵的对话可以被这么拆分：<br/>1.小精灵通过input()函数进行提问。<br/>2.提问分为两个基础条件：基础条件1<code>if</code>需要帮助；基础条件2<code>else</code>不需要帮助。<br/>3.在<strong>基础条件1</strong>需要帮助的情况下，又分为3个额外条件：<code>if</code>1存取款；<code>elif</code>2货币兑换；<code>else</code>3咨询。<br/>4.小精灵会根据你的选择，给予不同的回答。如果选择1-存取款或者3-咨询，小精灵会推荐你去对应的窗口。<br/>5.如果选择<code>elif</code>条件2-货币兑换，需要再通过input()函数提一个问题：<strong>请问您需要兑换多少金加隆呢？</strong><br/>6.当获得了回答后，由于1金加隆=51.3人民币，而你支付的是人民币，所以需要计算出支付的人民币数额。<br/>7.这时，你需要使用<code>float()</code>函数，将回答的数额转换为<strong>浮点类型</strong>进行计算，再通过<code>str()</code>函数，转换为<strong>字符串类型</strong>才能进行数据拼接，打印出小精灵说的话<strong>那么，您需要付给我（你说的数字N*51.3）人民币。</strong><br/>8.在<strong>基础条件2</strong>不需要帮助的情况下，小精灵会礼貌的说再见。</td></tr></tbody></table><p>接下来是我对该练习的解答</p><p>运行成功，但不知道是否正确，权当参考</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">a&#x3D;input(&quot;您好，欢迎来到古灵阁，请问您需要帮助吗？需要or不需要？&quot;)</span><br><span class="line">if a&#x3D;&#x3D;&quot;需要&quot;:</span><br><span class="line">    b&#x3D;input(&quot;小精灵：请问您需要什么帮助呢？1 存取款；2 货币兑换；3 咨询&quot;)</span><br><span class="line">    if b&#x3D;&#x3D;&quot;1&quot;:</span><br><span class="line">        print(&quot;小精灵推荐你去存取款窗口&quot;)</span><br><span class="line">    elif b&#x3D;&#x3D;&quot;2&quot;:</span><br><span class="line">        print(&quot;小精灵：金加隆和人民币的兑换率为1:51.3，即一金加隆&#x3D;51.3人民币&quot;)</span><br><span class="line">        N&#x3D;input(&quot;小精灵：请问您需要兑换多少金加隆呢？&quot;)</span><br><span class="line">        print(&quot;小精灵：好的，我知道了，您需要兑换&quot;+N+&quot;金加隆。&quot;)</span><br><span class="line">        N&#x3D;float(N)</span><br><span class="line">        k&#x3D;str(N*51.3)</span><br><span class="line">        print(&quot;小精灵：那么，您需要付给我&quot;+k+&quot;人民币&quot;)</span><br><span class="line">    else:</span><br><span class="line">              print(&quot;小精灵推荐你去咨询窗口。&quot;)</span><br><span class="line">else:</span><br><span class="line">     print(&quot;小精灵:好的，再见。&quot;)</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h6 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h6&gt;&lt;p&gt;最近除了学习PHP语法外，还接触了部分Python。&lt;/p&gt;
&lt;p&gt;个人觉得比起C语言和PHP，Python更加简洁，也更容易入手，非常适合</summary>
      
    
    
    
    
    <category term="-python" scheme="http://example.com/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>PHP 学习3</title>
    <link href="http://example.com/2020/10/12/PHP-%E5%AD%A6%E4%B9%A03/"/>
    <id>http://example.com/2020/10/12/PHP-%E5%AD%A6%E4%B9%A03/</id>
    <published>2020-10-11T18:59:31.000Z</published>
    <updated>2020-10-11T10:59:31.570Z</updated>
    
    
    
    
    
  </entry>
  
  <entry>
    <title>PHP语法学习2</title>
    <link href="http://example.com/2020/10/11/PHP%E8%AF%AD%E6%B3%95%E5%AD%A6%E4%B9%A02/"/>
    <id>http://example.com/2020/10/11/PHP%E8%AF%AD%E6%B3%95%E5%AD%A6%E4%B9%A02/</id>
    <published>2020-10-10T18:49:34.000Z</published>
    <updated>2020-10-10T12:40:32.638Z</updated>
    
    <content type="html"><![CDATA[<h3 id="常量"><a href="#常量" class="headerlink" title="常量"></a>常量</h3><h5 id="使用函数"><a href="#使用函数" class="headerlink" title="使用函数"></a>使用函数</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">define() </span><br></pre></td></tr></table></figure><p>用法</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">define(&quot;A&quot; ,&quot;B&quot;);  &#x2F;&#x2F;设置常量为A，令常量A&#x3D;B.</span><br><span class="line"> </span><br><span class="line">function myTest()</span><br><span class="line">&#123;</span><br><span class="line">    echo A;  &#x2F;&#x2F;输出常量A，，，echo A不可换为echo &quot;A&quot;,否则会输出字符串。</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line">myTest();    </span><br><span class="line">?&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>[^注意！！！]: 这种方法是会区分大小写的，也就是说，如果输出命令为echo a ,就会提示“<code>Warning: Use of undefined constant greeting - assumed &#39;a&#39; (this will throw an Error in a future version of PHP) in /box/script.php on line a </code>”</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">define(&quot;A&quot; ,&quot;B&quot; ,true);  </span><br></pre></td></tr></table></figure><h5 id="函数参数"><a href="#函数参数" class="headerlink" title="函数参数"></a>函数参数</h5><table><thead><tr><th>1</th><th>name</th><th>必选参数，常量名称，即标志符。</th></tr></thead><tbody><tr><td>2</td><td>value</td><td>必选参数，常量的值。</td></tr><tr><td>3</td><td>case-insensitive</td><td>可选参数，如果设置为 TRUE，该常量则大小写不敏感。默认是大小写敏感的。</td></tr></tbody></table><h3 id="变量"><a href="#变量" class="headerlink" title="变量"></a>变量</h3><h5 id="字符串变量"><a href="#字符串变量" class="headerlink" title="字符串变量"></a>字符串变量</h5><table><thead><tr><th>序号</th><th>函数/运算符</th><th>作用</th></tr></thead><tbody><tr><td>1</td><td>（, )////( . )</td><td>将两个及以上的字符串连起来。</td></tr><tr><td>2</td><td>strlen( )</td><td>计算字符串的长度值。</td></tr><tr><td>3</td><td>strpos( )</td><td>查找字符串中某个片段的位置。</td></tr></tbody></table><h5 id="运算符"><a href="#运算符" class="headerlink" title="运算符"></a>运算符</h5><h6 id="算术运算符"><a href="#算术运算符" class="headerlink" title="算术运算符"></a>算术运算符</h6><table><thead><tr><th>运算符</th><th>作用</th></tr></thead><tbody><tr><td>x+y</td><td>加</td></tr><tr><td>x-y</td><td>减</td></tr><tr><td>x*y</td><td>乘</td></tr><tr><td>x/y</td><td>除</td></tr><tr><td>x%y</td><td>求余</td></tr><tr><td>-x</td><td>求相反数</td></tr><tr><td>x.y</td><td>连接两个字符串</td></tr></tbody></table><p>for example</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php </span><br><span class="line">$x&#x3D;10;</span><br><span class="line">$y&#x3D;3;</span><br><span class="line">echo ($x + $y);&#x2F;&#x2F;需要执行的需要用echo （），用echo &quot;&quot;会输出字符串。</span><br><span class="line">echo &quot;\n&quot;;</span><br><span class="line">echo($x - $y);</span><br><span class="line">echo &quot;\n&quot;;</span><br><span class="line">echo ($x * $y);</span><br><span class="line">echo &quot;\n&quot;;</span><br><span class="line">echo ($x &#x2F; $y);</span><br><span class="line">echo &quot;\n&quot;;</span><br><span class="line">echo ($x % $y);</span><br><span class="line">?&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h6 id="赋值运算符"><a href="#赋值运算符" class="headerlink" title="赋值运算符"></a>赋值运算符</h6><table><thead><tr><th>运算符</th><th>作用</th></tr></thead><tbody><tr><td>x=y</td><td>x=y</td></tr><tr><td>x+=y</td><td>x=x+y</td></tr><tr><td>x-=y</td><td>x=x-y</td></tr><tr><td>x*=y</td><td>x=x*y</td></tr><tr><td>x/=y</td><td>x=x/y</td></tr><tr><td>x%=y</td><td>x=x%y</td></tr><tr><td>x.=y</td><td>x=x.y</td></tr></tbody></table><h6 id="递增、递减运算符"><a href="#递增、递减运算符" class="headerlink" title="递增、递减运算符"></a>递增、递减运算符</h6><table><thead><tr><th>运算符</th><th>作用</th><th>代码</th><th>输出</th></tr></thead><tbody><tr><td>++x</td><td>预递增     x 加 1，然后返回 x</td><td>echo ++$x</td><td>x+1  (x值已改变)</td></tr><tr><td>x++</td><td>后递增     返回 x，然后 x 加 1</td><td>echo $x++</td><td>x  (x值已改变)</td></tr><tr><td>–x</td><td>预递减     x 减 1，然后返回 x</td><td>echo –$x</td><td>x-1  (x值已改变)</td></tr><tr><td>x–</td><td>后递减     返回 x，然后 x 减 1</td><td>echo $x–</td><td>x  (x值已改变)</td></tr></tbody></table><h6 id="比较运算符（bool）"><a href="#比较运算符（bool）" class="headerlink" title="比较运算符（bool）"></a>比较运算符（bool）</h6><table><thead><tr><th>运算符</th><th>名称</th><th>判断方式</th></tr></thead><tbody><tr><td>==</td><td>等于</td><td>字符相同</td></tr><tr><td>===</td><td>绝对等于</td><td>字符相同，类型相同</td></tr><tr><td>！=</td><td>不等于</td><td>字符不相同</td></tr><tr><td>&lt;&gt;</td><td>不等于</td><td>字符不相同</td></tr><tr><td>!==</td><td>绝对不等于</td><td>字符不相同/类型不相同</td></tr><tr><td>&gt;</td><td>大于</td><td></td></tr><tr><td>&lt;</td><td>小于</td><td></td></tr><tr><td>&gt;=</td><td>大于等于</td><td></td></tr><tr><td>&lt;=</td><td>小于等于</td><td></td></tr></tbody></table>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;常量&quot;&gt;&lt;a href=&quot;#常量&quot; class=&quot;headerlink&quot; title=&quot;常量&quot;&gt;&lt;/a&gt;常量&lt;/h3&gt;&lt;h5 id=&quot;使用函数&quot;&gt;&lt;a href=&quot;#使用函数&quot; class=&quot;headerlink&quot; title=&quot;使用函数&quot;&gt;&lt;/a&gt;使用函数&lt;/h</summary>
      
    
    
    
    
    <category term="PHP学习 小白总结" scheme="http://example.com/tags/PHP%E5%AD%A6%E4%B9%A0-%E5%B0%8F%E7%99%BD%E6%80%BB%E7%BB%93/"/>
    
  </entry>
  
  <entry>
    <title>PHP语法学习1</title>
    <link href="http://example.com/2020/10/10/PHP%E8%AF%AD%E6%B3%95%E5%AD%A6%E4%B9%A0/"/>
    <id>http://example.com/2020/10/10/PHP%E8%AF%AD%E6%B3%95%E5%AD%A6%E4%B9%A0/</id>
    <published>2020-10-09T19:44:54.000Z</published>
    <updated>2020-10-09T13:23:57.294Z</updated>
    
    <content type="html"><![CDATA[<p>[^]: </p><p>该文为对所收集的资料的一些归纳总结，文末处将放出引用文章链接。</p><h2 id="基本的-PHP-语法"><a href="#基本的-PHP-语法" class="headerlink" title="基本的 PHP 语法"></a>基本的 PHP 语法</h2><p>[^放在代码最前面和最后面]: </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">&#x2F;&#x2F; PHP 代码</span><br><span class="line">?&gt; </span><br></pre></td></tr></table></figure><h4 id="变量"><a href="#变量" class="headerlink" title="变量"></a>变量</h4><p>变量设置的字母前面都要加“$”号</p><p>eg：$x=8</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">function myTest()</span><br><span class="line">&#123;</span><br><span class="line">    global $&#x2F;&#x2F;设置的变量</span><br><span class="line">    &#x2F;&#x2F;运算内容</span><br><span class="line">&#125; </span><br><span class="line"></span><br><span class="line">myTest(); </span><br></pre></td></tr></table></figure><p>还有一种比较复杂的，但似乎效果没多大区别、</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">function myTest()</span><br><span class="line">&#123;</span><br><span class="line">    $GLOBALS[&#39;y&#39;]&#x3D;$GLOBALS[&#39;x&#39;]+$GLOBALS[&#39;y&#39;];</span><br><span class="line">&#125; </span><br><span class="line"> </span><br><span class="line">myTest();</span><br><span class="line">echo $y;</span><br><span class="line">?&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure><table><thead><tr><th>序号</th><th>作用域</th><th>描述</th></tr></thead><tbody><tr><td>1</td><td>global</td><td>全局作用域</td></tr><tr><td>2</td><td>local</td><td>局部作用域</td></tr><tr><td>3</td><td>static</td><td>静态作用域</td></tr><tr><td>4</td><td>parameter</td><td>函数参数作用域</td></tr></tbody></table><p>[^其实还不是很搞清楚这四个的区别，但感觉还是global更广]: </p><h4 id="输出语句"><a href="#输出语句" class="headerlink" title="输出语句"></a>输出语句</h4><p>[^主要是echo与print]: </p><p>​    echo - 可以输出一个或多个字符串</p><p>​    print - 只允许输出一个字符串，返回值总为 1</p><table><thead><tr><th>序号</th><th>种类</th><th>用途</th></tr></thead><tbody><tr><td>1</td><td>echo</td><td>输出一个或者多个字符串。</td></tr><tr><td>2</td><td>print</td><td>和 echo 最主要的区别： print 仅支持一个参数，并总是返回 1。</td></tr><tr><td>3</td><td>print-r</td><td>打印关于变量的易于理解的信息,如果给出的是 string、integer 或 float，将打印变量值本身。如果给出的是  array，将会按照一定格式显示键和元素。object 与数组类似。 记住，print_r() 将把数组的指针移到最后边。使用 reset()  可让指针回到开始处。</td></tr><tr><td>4</td><td>var-dump</td><td>此函数显示关于一个或多个表达式的结构信息，包括表达式的类型与值。数组将递归展开值，通过缩进显示其结构。</td></tr><tr><td></td><td></td><td></td></tr></tbody></table><p>顺便发现了‘br’和‘\n’的区别</p><table><thead><tr><th>代码</th><th>用途</th><th>区别</th></tr></thead><tbody><tr><td>br</td><td>换行</td><td>需打出<br>才可换行，否则无效。</td></tr><tr><td>\n</td><td>换行</td><td>打出”\n“即可换行</td></tr></tbody></table><h4 id="数据类型"><a href="#数据类型" class="headerlink" title="数据类型"></a>数据类型</h4><table><thead><tr><th>序号</th><th>名称</th><th>描述</th></tr></thead><tbody><tr><td>1</td><td>整型</td><td>整数</td></tr><tr><td>2</td><td>浮点型</td><td>小数或指数形式</td></tr><tr><td>3</td><td>数组</td><td>一种把values映射到keys的有序图</td></tr><tr><td>4</td><td>布尔型</td><td>用于条件判断</td></tr><tr><td>5</td><td>对象</td><td></td></tr><tr><td>6</td><td>字符串</td><td>一串字符的序列</td></tr><tr><td>7</td><td>NULL值</td><td>表示变量没有值</td></tr></tbody></table>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;[^]: &lt;/p&gt;
&lt;p&gt;该文为对所收集的资料的一些归纳总结，文末处将放出引用文章链接。&lt;/p&gt;
&lt;h2 id=&quot;基本的-PHP-语法&quot;&gt;&lt;a href=&quot;#基本的-PHP-语法&quot; class=&quot;headerlink&quot; title=&quot;基本的 PHP 语法&quot;&gt;&lt;/a&gt;基本的 </summary>
      
    
    
    
    
    <category term="php 学习笔记​" scheme="http://example.com/tags/php-%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E2%80%8B/"/>
    
  </entry>
  
  <entry>
    <title>A Specil Article</title>
    <link href="http://example.com/2020/10/07/A-Specil-Article/"/>
    <id>http://example.com/2020/10/07/A-Specil-Article/</id>
    <published>2020-10-06T19:42:33.000Z</published>
    <updated>2020-10-06T12:11:50.837Z</updated>
    
    <content type="html"><![CDATA[<p>虽然说很多人已经在中学学习过了，但由于时间间隔太长，已经遗忘了大部分，就做一次归纳总结吧</p><h1 id="二进制"><a href="#二进制" class="headerlink" title="二进制"></a>二进制</h1><p>[二进制_百度百科]: </p><p>二进制（binary）在<a href="https://baike.baidu.com/item/%E6%95%B0%E5%AD%A6/107037">数学</a>和<a href="https://baike.baidu.com/item/%E6%95%B0%E5%AD%97%E7%94%B5%E8%B7%AF/1705">数字电路</a>中指以2为基数的记数系统，以2为基数代表系统是二进位制的。这一系统中，通常用两个不同的符号0（代表零）和1（代表一）来表示。</p><h4 id="算法"><a href="#算法" class="headerlink" title="算法"></a>算法</h4><ol><li><p>将值除以2，记下余数。</p></li><li><p>只要所得的商不为0，继续将最新的商除以2，并记下余数。</p></li><li><p>商为0时，将余数按照记录的顺序从下往上依次排列，即可得到该数的二进制。</p><h6 id="举个栗子"><a href="#举个栗子" class="headerlink" title="举个栗子"></a>举个栗子</h6></li></ol><p><img src="C:\Users\Administrator\Pictures\d01373f082025aaf317d0612f5edab64024f1a9f.png" alt="d01373f082025aaf317d0612f5edab64024f1a9f" loading="lazy"></p><h1 id="八进制"><a href="#八进制" class="headerlink" title="八进制"></a>八进制</h1><p>[八进制_百度百科]: </p><p>八进制，Octal，缩写OCT或O，一种以8为基数的<a href="https://baike.baidu.com/item/%E8%AE%A1%E6%95%B0%E6%B3%95/1591430">计数法</a>，采用0，1，2，3，4，5，6，7八个数字，逢八进1。一些编程语言中常常以数字0开始表明该数字是八进制。八进制的数和二进制数可以按位对应（八进制一位对应二进制三位），因此常应用在<a href="https://baike.baidu.com/item/%E8%AE%A1%E7%AE%97%E6%9C%BA">计算机</a>语言中。</p><h4 id="算法-1"><a href="#算法-1" class="headerlink" title="算法"></a>算法</h4><p>与二进制相似</p><p>十进制化八进制：采用除8取余法。</p><ol><li><p>将值除以8，记下余数。</p></li><li><p>只要所得的商不为0，继续将最新的商除以8，并记下余数。</p></li><li><p>商为0时，将余数按照记录的顺序从下往上依次排列，即可得到该数的二进制。</p><h6 id="举个栗子-1"><a href="#举个栗子-1" class="headerlink" title="举个栗子"></a>举个栗子</h6><p><img src="C:\Users\Administrator\Pictures\2345截图20201006200948.png" alt="2345截图20201006200948" loading="lazy"></p><h2 id="常用转换表"><a href="#常用转换表" class="headerlink" title="常用转换表"></a>常用转换表</h2><p><img src="C:\Users\Administrator\Pictures\u=2342573782,1111918725&fm=26&gp=0.jpg" alt="u=2342573782,1111918725&amp;fm=26&amp;gp=0" loading="lazy"></p></li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;虽然说很多人已经在中学学习过了，但由于时间间隔太长，已经遗忘了大部分，就做一次归纳总结吧&lt;/p&gt;
&lt;h1 id=&quot;二进制&quot;&gt;&lt;a href=&quot;#二进制&quot; class=&quot;headerlink&quot; title=&quot;二进制&quot;&gt;&lt;/a&gt;二进制&lt;/h1&gt;&lt;p&gt;[二进制_百度百科]: &lt;/</summary>
      
    
    
    
    
    <category term="h-p-b-d a-gift 二进制/十进制/八进制" scheme="http://example.com/tags/h-p-b-d-a-gift-%E4%BA%8C%E8%BF%9B%E5%88%B6-%E5%8D%81%E8%BF%9B%E5%88%B6-%E5%85%AB%E8%BF%9B%E5%88%B6/"/>
    
  </entry>
  
  <entry>
    <title>MyFirstArticle</title>
    <link href="http://example.com/2020/10/06/MyFirstArticle/"/>
    <id>http://example.com/2020/10/06/MyFirstArticle/</id>
    <published>2020-10-05T20:50:02.000Z</published>
    <updated>2020-10-05T14:03:21.822Z</updated>
    
    <content type="html"><![CDATA[<p>这几天花了好长(?)时间用hexo搭了一篇博客。。。<br>以下总结为几点：<br>首先，是<strong>hexo的基本命令</strong>：<br>1  <strong>hexo clean</strong>  （个人理解为清除缓存功能）<br>2  <strong>hexo g</strong>       (emmmmmm，应该是用于运行自己写下命令吧)<br>3  <strong>hexo s</strong>       （一般用于hexo g后面，大概是浏览效果吧）<br>4  <strong>hexo d</strong>       (将设计好的本地页面部署到Git上)</p><p>然后，最近发现了一些组合命令</p><p><strong>hexo g -d</strong></p><p>优点：比较快速，不用等待运行时间，一步到位，方便简洁</p><p>缺点：无法浏览，要是命令出现bug（尤其是搭建主题时），整个博客会直接崩掉。。。</p><p>​           然后事情就麻烦了</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;这几天花了好长(?)时间用hexo搭了一篇博客。。。&lt;br&gt;以下总结为几点：&lt;br&gt;首先，是&lt;strong&gt;hexo的基本命令&lt;/strong&gt;：&lt;br&gt;1  &lt;strong&gt;hexo clean&lt;/strong&gt;  （个人理解为清除缓存功能）&lt;br&gt;2  &lt;strong&gt;</summary>
      
    
    
    
    
    <category term="hexo blog" scheme="http://example.com/tags/hexo-blog/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://example.com/2020/10/02/hello-world/"/>
    <id>http://example.com/2020/10/02/hello-world/</id>
    <published>2020-10-02T09:32:57.775Z</published>
    <updated>2020-10-02T09:32:57.775Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot;&gt;documentation&lt;/a&gt; for</summary>
      
    
    
    
    
  </entry>
  
</feed>
